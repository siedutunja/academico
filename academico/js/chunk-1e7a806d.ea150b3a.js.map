{"version":3,"sources":["webpack:///./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","webpack:///./src/views/informes/ConsolidadosCurso.vue?8b20","webpack:///src/views/informes/ConsolidadosCurso.vue","webpack:///./src/views/informes/ConsolidadosCurso.vue?763d","webpack:///./src/views/informes/ConsolidadosCurso.vue","webpack:///./node_modules/regenerator-runtime/runtime.js","webpack:///./src/views/informes/ConsolidadosCurso.vue?1d59"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","render","_vm","_h","$createElement","_c","_self","staticClass","attrs","scopedSlots","_u","_v","proxy","ref","comboInformes","on","$event","idPeriodo","idSede","idCurso","model","callback","$$v","idInforme","expression","comboPeriodos","comboSedes","ocuparComboCursosSede","comboCursosSede","consultarMatriculados","_e","staticStyle","encabColumnas","listaMatriculados","slot","imprimirConsolidado","Date","toLocaleDateString","encabColumnasAreas","encabColumnasRecup","encabColumnasAreasRecup","staticRenderFns","component","runtime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","defineProperty","enumerable","configurable","writable","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","makeInvokeMethod","tryCatch","type","call","GenStateSuspendedStart","GenStateSuspendedYield","GenStateExecuting","GenStateCompleted","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","AsyncIterator","PromiseImpl","invoke","record","result","__await","unwrapped","previousPromise","enqueue","callInvokeWithMethodAndArg","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","constructor","displayName","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","async","iter","toString","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootEntry","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","module","regeneratorRuntime","accidentalStrictMode","Function"],"mappings":"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AAQ,KAAR,4DAEM,WAAN,GACM,OAAN,KACM,gBAAN,GACM,QAAN,KACM,kBAAN,GACM,cAAN,GACM,mBAAN,GACM,sBAAN,GACM,UAAN,EACM,cAAN,GACM,WAAN,KACM,YAAN,KACM,aAAN,EACM,QAAN,KACM,wBAAN,GACM,2BAAN,KAGE,QAAF,CACI,oBADJ,WAGM,IAAN,uCAEA,wDACA,wCAEA,6sBAiCM,EAAN,kHAIA,EAJA,iKAOA,oCAPA,2FAOA,2BAPA,qBAOA,gBAPA,qBAOA,iBAPA,uBAOA,eAPA,6BAQA,EARA,4DASA,EATA,2DAgBM,EAAN,SAEI,sBA3DJ,WA4DM,KAAN,eACA,kBACQ,KAAR,kCACA,kBACQ,KAAR,4BACA,kBACQ,KAAR,gDACA,mBACQ,KAAR,2CAGI,0BAvEJ,WAuEM,IAAN,OAAM,OAAN,yJACA,mGACA,sGACA,gDACA,kBACA,yBAGA,gCARA,SASA,IACA,sJACA,kBACA,cACA,gFACA,kBAEA,kBACA,8CAIA,mBACA,kIACA,oBAvBA,UAyBA,aAzBA,wBA0BA,2BA1BA,UA2BA,IACA,gHACA,kBACA,cACA,gFACA,kBAEA,kBACA,yCAKA,mBACA,kIACA,oBA1CA,eA4CA,wBACA,+EACA,6CACA,4FAEA,uBAjDA,UAkDA,IACA,kHACA,kBACA,gBACA,sFACA,qBACA,CACA,oBAEA,SACA,kCACA,0BACA,6BACA,YACA,gDACA,6BAEA,gFAGA,8BAGA,2DAIA,uBACA,mBACA,SAIA,mBACA,gIACA,oBArFA,uCAwFA,KACA,oCACA,wBACA,+EACA,iEACA,kDACA,iGACA,wBACA,mCACA,yFACA,eAEA,iBAEA,mBAGA,iEACA,uFACA,uFACA,uFACA,uFACA,sGACA,0FACA,uFACA,uFAEA,uBACA,IACA,KACA,IAtHA,UAuHA,IACA,kHACA,kBACA,gBACA,sFACA,sBAEA,oBAEA,kCACA,QACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KACA,0BACA,UACA,UACA,kDACA,2BACA,QACA,mCACA,2FACA,OACA,oJACA,cAEA,mDACA,0CACA,wFACA,IACA,YACA,KACA,8HACA,IACA,8HACA,IACA,gIACA,IAEA,yBACA,2BACA,2BACA,SAIA,wCACA,wEACA,oBAEA,CACA,oEACA,OACA,qBACA,gDACA,0CAEA,mJACA,iBAEA,uDAIA,oJACA,kBAEA,uDACA,wFACA,IACA,gBACA,KACA,8HACA,IACA,8HACA,IACA,gIACA,IAEA,yBACA,2BACA,2BACA,UAMA,KACA,4CACA,+BACA,SACA,SACA,SACA,SACA,SACA,SACA,cAEA,wBACA,8BAEA,wDAEA,OAEA,sDAEA,QACA,uBACA,yCACA,aACA,WACA,WAIA,SACA,wDACA,uBACA,mBACA,UAEA,oBAKA,mBACA,0HACA,oBA9PA,+CAkQI,wCAzUJ,WAyUM,IAAN,OAAM,OAAN,yJACA,mGACA,sGACA,gDACA,kBACA,yBAGA,gCARA,SASA,IACA,sJACA,kBACA,cACA,gFACA,kBAEA,kBACA,8CAIA,mBACA,kIACA,oBAvBA,UAyBA,aAzBA,wBA0BA,2BA1BA,UA2BA,IACA,gHACA,kBACA,cACA,gFACA,kBAEA,kBACA,yCAKA,mBACA,kIACA,oBA1CA,eA4CA,6BACA,oFACA,6CACA,iGAEA,uBAjDA,UAkDA,IACA,kHACA,kBACA,gBACA,sFACA,qBACA,CACA,oBAEA,SACA,kCACA,0BACA,6BACA,YACA,gDACA,6BAEA,gFAGA,8BAGA,2DAIA,uBACA,mBACA,SAIA,mBACA,gIACA,oBArFA,uCAwFA,KACA,oCACA,6BACA,oFACA,sEACA,kDACA,sGACA,wBACA,mCACA,8FACA,eAEA,iBAEA,mBAGA,sEACA,4FACA,4FACA,4FACA,4FACA,2GACA,+FACA,4FACA,4FAEA,uBACA,IACA,KACA,IAtHA,UAuHA,IACA,kHACA,kBACA,gBACA,sFACA,sBAEA,oBAEA,kCACA,QACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KACA,0BACA,UACA,UACA,kDACA,2BACA,QACA,mCACA,2FACA,OACA,oJACA,cAEA,+CACA,8CACA,8DAEA,mDAEA,0CACA,wFACA,IACA,YACA,KACA,8HACA,IACA,8HACA,IACA,gIACA,IAEA,yBACA,2BACA,2BACA,SAIA,wCACA,wEACA,oBAEA,CACA,oEACA,OACA,qBACA,gDACA,0CAEA,oJACA,iBAEA,uDAIA,mJACA,kBAEA,+CACA,8CACA,kEAEA,uDAEA,wFACA,IACA,gBACA,KACA,8HACA,IACA,8HACA,IACA,gIACA,IAEA,yBACA,2BACA,2BACA,UAMA,KACA,4CACA,+BACA,SACA,SACA,SACA,SACA,SACA,SACA,cAEA,0CACA,8BAEA,wDAEA,OAEA,sDAEA,QACA,uBACA,yCACA,aACA,WACA,WAIA,SACA,wDACA,+BACA,uBACA,mBACA,UAEA,oBAKA,mBACA,0HACA,oBAzQA,+CA6QI,gCAtlBJ,WAslBM,IAAN,OAAM,OAAN,qJACA,mGACA,gBAFA,wBAGA,sGACA,2BACA,gDACA,kBACA,yBAPA,SAUA,IACA,gHACA,kBACA,cACA,gFACA,kBAEA,kBACA,yCAKA,mBACA,kIACA,oBAzBA,UA2BA,aA3BA,wBA4BA,mBACA,0EACA,6CACA,uFAEA,uBAjCA,UAkCA,IACA,kHACA,kBACA,gBACA,sFACA,qBACA,CACA,oBAEA,SACA,kCACA,0BACA,6BACA,YACA,gDACA,6BAEA,gFAGA,8BAGA,2DAIA,uBACA,mBACA,SAIA,mBACA,gIACA,oBArEA,uCAwEA,KACA,oCACA,mBACA,0EACA,4DACA,6CACA,oFACA,eAEA,4DACA,mFACA,mFACA,mFACA,mFACA,iGACA,qFACA,kFACA,kFACA,uBACA,IACA,KACA,IA7FA,UA8FA,IACA,kHACA,kBACA,gBACA,sFACA,sBAEA,oBAEA,kCACA,QACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KACA,0BACA,UACA,UACA,6BACA,YACA,gDACA,6BAEA,yCACA,aAEA,0CAKA,+FACA,gBAEA,0CACA,6GACA,IACA,YACA,KACA,4GACA,IACA,4GACA,IACA,8GACA,IAEA,gBACA,kBACA,kBACA,QAIA,KACA,4CACA,+BAEA,SACA,SACA,SACA,SACA,SACA,SACA,cAEA,0CACA,8BAEA,wDAEA,OAEA,sDACA,QACA,uBACA,yCACA,aACA,WACA,WAIA,SACA,wDACA,uBACA,mBACA,UAEA,oBAKA,mBACA,gIACA,oBAjMA,+CAsMI,8CA5xBJ,WA4xBM,IAAN,OAAM,OAAN,qJACA,mGACA,gBAFA,wBAGA,sGACA,2BACA,gDACA,kBACA,yBAPA,SAUA,IACA,gHACA,kBACA,cACA,gFACA,kBAEA,kBACA,yCAKA,mBACA,kIACA,oBAzBA,UA2BA,aA3BA,wBA4BA,wBACA,+EACA,6CACA,4FAEA,uBAjCA,UAkCA,IACA,kHACA,kBACA,gBACA,sFACA,qBACA,CACA,oBAEA,SACA,kCACA,0BACA,6BACA,YACA,gDACA,6BAEA,gFAGA,8BAGA,2DAIA,uBACA,mBACA,SAIA,mBACA,gIACA,oBArEA,uCAwEA,KACA,oCACA,wBACA,+EACA,iEACA,6CACA,yFACA,eAEA,iEACA,wFACA,wFACA,wFACA,wFACA,sGACA,0FACA,uFACA,uFACA,uBACA,IACA,KACA,IA7FA,UA8FA,IACA,kHACA,kBACA,gBACA,sFACA,sBAEA,oBAEA,kCACA,QACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KACA,0BACA,UACA,UACA,6BACA,YACA,gDACA,6BAEA,yCACA,aAEA,0CAKA,+FACA,gBAEA,6BACA,4BACA,qDAEA,0CAEA,6GACA,IACA,YACA,KACA,4GACA,IACA,4GACA,IACA,8GACA,IAEA,gBACA,kBACA,kBACA,QAIA,KACA,4CACA,+BAEA,SACA,SACA,SACA,SACA,SACA,SACA,cAEA,0CACA,8BAEA,wDAEA,OAEA,sDACA,QACA,uBACA,yCACA,aACA,WACA,WAIA,SACA,wDACA,uBACA,mBACA,UAEA,oBAKA,mBACA,gIACA,oBAtMA,+CA2MI,iBAv+BJ,WAu+BM,IAAN,OAAM,OAAN,sIACA,gBACA,+CACA,6DAHA,8CAMI,sBA7+BJ,WA6+BM,IAAN,OAAM,OAAN,sIACA,qBACA,gDACA,qBACA,0EAJA,8CASI,oBAt/BJ,WAs/BM,IAAN,OAAM,OAAN,sIACA,mBACA,yDACA,mEAHA,8CAMI,UA5/BJ,SA4/BA,GACM,IAAN,2CACM,OAAN,+BAEI,mBAhgCJ,WAigCM,KAAN,mBAEI,iBAngCJ,SAmgCA,OACM,KAAN,kBAAQ,MAAR,EAAQ,QAAR,EAAQ,QAAR,uBAAQ,OAAR,EAAQ,cAAR,IAAQ,aAAR,MAGE,SAAF,GAEE,YAziCF,WA0iCI,KAAJ,sBACI,KAAJ,qBCjsC0W,I,wBCQtWC,EAAY,eACd,EACAzC,EACAwC,GACA,EACA,KACA,KACA,MAIa,aAAAC,E,gCCZf,IAAIC,EAAW,SAAUC,GACvB,aAEA,IAEI5C,EAFA6C,EAAKC,OAAOC,UACZC,EAASH,EAAGI,eAEZC,EAA4B,oBAAXC,OAAwBA,OAAS,GAClDC,EAAiBF,EAAQG,UAAY,aACrCC,EAAsBJ,EAAQK,eAAiB,kBAC/CC,EAAoBN,EAAQO,aAAe,gBAE/C,SAASC,EAAOC,EAAK3E,EAAKG,GAOxB,OANA2D,OAAOc,eAAeD,EAAK3E,EAAK,CAC9BG,MAAOA,EACP0E,YAAY,EACZC,cAAc,EACdC,UAAU,IAELJ,EAAI3E,GAEb,IAEE0E,EAAO,GAAI,IACX,MAAO3D,GACP2D,EAAS,SAASC,EAAK3E,EAAKG,GAC1B,OAAOwE,EAAI3E,GAAOG,GAItB,SAAS6E,EAAKC,EAASC,EAASxE,EAAMyE,GAEpC,IAAIC,EAAiBF,GAAWA,EAAQnB,qBAAqBsB,EAAYH,EAAUG,EAC/EC,EAAYxB,OAAOyB,OAAOH,EAAerB,WACzCyB,EAAU,IAAIC,EAAQN,GAAe,IAMzC,OAFAG,EAAUI,QAAUC,EAAiBV,EAASvE,EAAM8E,GAE7CF,EAcT,SAASM,EAASnF,EAAIkE,EAAK1E,GACzB,IACE,MAAO,CAAE4F,KAAM,SAAU5F,IAAKQ,EAAGqF,KAAKnB,EAAK1E,IAC3C,MAAOc,GACP,MAAO,CAAE8E,KAAM,QAAS5F,IAAKc,IAhBjC6C,EAAQoB,KAAOA,EAoBf,IAAIe,EAAyB,iBACzBC,EAAyB,iBACzBC,EAAoB,YACpBC,EAAoB,YAIpBC,EAAmB,GAMvB,SAASd,KACT,SAASe,KACT,SAASC,KAIT,IAAIC,EAAoB,GACxBA,EAAkBlC,GAAkB,WAClC,OAAOzD,MAGT,IAAI4F,EAAWzC,OAAO0C,eAClBC,EAA0BF,GAAYA,EAASA,EAASG,EAAO,MAC/DD,GACAA,IAA4B5C,GAC5BG,EAAO8B,KAAKW,EAAyBrC,KAGvCkC,EAAoBG,GAGtB,IAAIE,EAAKN,EAA2BtC,UAClCsB,EAAUtB,UAAYD,OAAOyB,OAAOe,GAWtC,SAASM,EAAsB7C,GAC7B,CAAC,OAAQ,QAAS,UAAU8C,SAAQ,SAASC,GAC3CpC,EAAOX,EAAW+C,GAAQ,SAAS7G,GACjC,OAAOU,KAAK+E,QAAQoB,EAAQ7G,SAkClC,SAAS8G,EAAczB,EAAW0B,GAChC,SAASC,EAAOH,EAAQ7G,EAAKL,EAASC,GACpC,IAAIqH,EAAStB,EAASN,EAAUwB,GAASxB,EAAWrF,GACpD,GAAoB,UAAhBiH,EAAOrB,KAEJ,CACL,IAAIsB,EAASD,EAAOjH,IAChBE,EAAQgH,EAAOhH,MACnB,OAAIA,GACiB,kBAAVA,GACP6D,EAAO8B,KAAK3F,EAAO,WACd6G,EAAYpH,QAAQO,EAAMiH,SAAS7G,MAAK,SAASJ,GACtD8G,EAAO,OAAQ9G,EAAOP,EAASC,MAC9B,SAASkB,GACVkG,EAAO,QAASlG,EAAKnB,EAASC,MAI3BmH,EAAYpH,QAAQO,GAAOI,MAAK,SAAS8G,GAI9CF,EAAOhH,MAAQkH,EACfzH,EAAQuH,MACP,SAAS/G,GAGV,OAAO6G,EAAO,QAAS7G,EAAOR,EAASC,MAvBzCA,EAAOqH,EAAOjH,KA4BlB,IAAIqH,EAEJ,SAASC,EAAQT,EAAQ7G,GACvB,SAASuH,IACP,OAAO,IAAIR,GAAY,SAASpH,EAASC,GACvCoH,EAAOH,EAAQ7G,EAAKL,EAASC,MAIjC,OAAOyH,EAaLA,EAAkBA,EAAgB/G,KAChCiH,EAGAA,GACEA,IAKR7G,KAAK+E,QAAU6B,EA2BjB,SAAS5B,EAAiBV,EAASvE,EAAM8E,GACvC,IAAIiC,EAAQ1B,EAEZ,OAAO,SAAgBe,EAAQ7G,GAC7B,GAAIwH,IAAUxB,EACZ,MAAM,IAAIyB,MAAM,gCAGlB,GAAID,IAAUvB,EAAmB,CAC/B,GAAe,UAAXY,EACF,MAAM7G,EAKR,OAAO0H,IAGTnC,EAAQsB,OAASA,EACjBtB,EAAQvF,IAAMA,EAEd,MAAO,EAAM,CACX,IAAI2H,EAAWpC,EAAQoC,SACvB,GAAIA,EAAU,CACZ,IAAIC,EAAiBC,EAAoBF,EAAUpC,GACnD,GAAIqC,EAAgB,CAClB,GAAIA,IAAmB1B,EAAkB,SACzC,OAAO0B,GAIX,GAAuB,SAAnBrC,EAAQsB,OAGVtB,EAAQuC,KAAOvC,EAAQwC,MAAQxC,EAAQvF,SAElC,GAAuB,UAAnBuF,EAAQsB,OAAoB,CACrC,GAAIW,IAAU1B,EAEZ,MADA0B,EAAQvB,EACFV,EAAQvF,IAGhBuF,EAAQyC,kBAAkBzC,EAAQvF,SAEN,WAAnBuF,EAAQsB,QACjBtB,EAAQ0C,OAAO,SAAU1C,EAAQvF,KAGnCwH,EAAQxB,EAER,IAAIiB,EAAStB,EAASX,EAASvE,EAAM8E,GACrC,GAAoB,WAAhB0B,EAAOrB,KAAmB,CAO5B,GAJA4B,EAAQjC,EAAQnF,KACZ6F,EACAF,EAEAkB,EAAOjH,MAAQkG,EACjB,SAGF,MAAO,CACLhG,MAAO+G,EAAOjH,IACdI,KAAMmF,EAAQnF,MAGS,UAAhB6G,EAAOrB,OAChB4B,EAAQvB,EAGRV,EAAQsB,OAAS,QACjBtB,EAAQvF,IAAMiH,EAAOjH,OAU7B,SAAS6H,EAAoBF,EAAUpC,GACrC,IAAIsB,EAASc,EAASvD,SAASmB,EAAQsB,QACvC,GAAIA,IAAW9F,EAAW,CAKxB,GAFAwE,EAAQoC,SAAW,KAEI,UAAnBpC,EAAQsB,OAAoB,CAE9B,GAAIc,EAASvD,SAAS,YAGpBmB,EAAQsB,OAAS,SACjBtB,EAAQvF,IAAMe,EACd8G,EAAoBF,EAAUpC,GAEP,UAAnBA,EAAQsB,QAGV,OAAOX,EAIXX,EAAQsB,OAAS,QACjBtB,EAAQvF,IAAM,IAAIkI,UAChB,kDAGJ,OAAOhC,EAGT,IAAIe,EAAStB,EAASkB,EAAQc,EAASvD,SAAUmB,EAAQvF,KAEzD,GAAoB,UAAhBiH,EAAOrB,KAIT,OAHAL,EAAQsB,OAAS,QACjBtB,EAAQvF,IAAMiH,EAAOjH,IACrBuF,EAAQoC,SAAW,KACZzB,EAGT,IAAIjG,EAAOgH,EAAOjH,IAElB,OAAMC,EAOFA,EAAKG,MAGPmF,EAAQoC,EAASQ,YAAclI,EAAKC,MAGpCqF,EAAQ6C,KAAOT,EAASU,QAQD,WAAnB9C,EAAQsB,SACVtB,EAAQsB,OAAS,OACjBtB,EAAQvF,IAAMe,GAUlBwE,EAAQoC,SAAW,KACZzB,GANEjG,GA3BPsF,EAAQsB,OAAS,QACjBtB,EAAQvF,IAAM,IAAIkI,UAAU,oCAC5B3C,EAAQoC,SAAW,KACZzB,GAoDX,SAASoC,EAAaC,GACpB,IAAIC,EAAQ,CAAEC,OAAQF,EAAK,IAEvB,KAAKA,IACPC,EAAME,SAAWH,EAAK,IAGpB,KAAKA,IACPC,EAAMG,WAAaJ,EAAK,GACxBC,EAAMI,SAAWL,EAAK,IAGxB7H,KAAKmI,WAAWC,KAAKN,GAGvB,SAASO,EAAcP,GACrB,IAAIvB,EAASuB,EAAMQ,YAAc,GACjC/B,EAAOrB,KAAO,gBACPqB,EAAOjH,IACdwI,EAAMQ,WAAa/B,EAGrB,SAASzB,EAAQN,GAIfxE,KAAKmI,WAAa,CAAC,CAAEJ,OAAQ,SAC7BvD,EAAY0B,QAAQ0B,EAAc5H,MAClCA,KAAKuI,OAAM,GA8Bb,SAASxC,EAAOyC,GACd,GAAIA,EAAU,CACZ,IAAIC,EAAiBD,EAAS/E,GAC9B,GAAIgF,EACF,OAAOA,EAAetD,KAAKqD,GAG7B,GAA6B,oBAAlBA,EAASd,KAClB,OAAOc,EAGT,IAAKE,MAAMF,EAASG,QAAS,CAC3B,IAAIC,GAAK,EAAGlB,EAAO,SAASA,IAC1B,QAASkB,EAAIJ,EAASG,OACpB,GAAItF,EAAO8B,KAAKqD,EAAUI,GAGxB,OAFAlB,EAAKlI,MAAQgJ,EAASI,GACtBlB,EAAKhI,MAAO,EACLgI,EAOX,OAHAA,EAAKlI,MAAQa,EACbqH,EAAKhI,MAAO,EAELgI,GAGT,OAAOA,EAAKA,KAAOA,GAKvB,MAAO,CAAEA,KAAMV,GAIjB,SAASA,IACP,MAAO,CAAExH,MAAOa,EAAWX,MAAM,GA+MnC,OA5mBA+F,EAAkBrC,UAAY4C,EAAG6C,YAAcnD,EAC/CA,EAA2BmD,YAAcpD,EACzCA,EAAkBqD,YAAc/E,EAC9B2B,EACA7B,EACA,qBAaFZ,EAAQ8F,oBAAsB,SAASC,GACrC,IAAIC,EAAyB,oBAAXD,GAAyBA,EAAOH,YAClD,QAAOI,IACHA,IAASxD,GAG2B,uBAAnCwD,EAAKH,aAAeG,EAAKC,QAIhCjG,EAAQkG,KAAO,SAASH,GAQtB,OAPI7F,OAAOiG,eACTjG,OAAOiG,eAAeJ,EAAQtD,IAE9BsD,EAAOK,UAAY3D,EACnB3B,EAAOiF,EAAQnF,EAAmB,sBAEpCmF,EAAO5F,UAAYD,OAAOyB,OAAOoB,GAC1BgD,GAOT/F,EAAQqG,MAAQ,SAAShK,GACvB,MAAO,CAAEmH,QAASnH,IAsEpB2G,EAAsBG,EAAchD,WACpCgD,EAAchD,UAAUO,GAAuB,WAC7C,OAAO3D,MAETiD,EAAQmD,cAAgBA,EAKxBnD,EAAQsG,MAAQ,SAASjF,EAASC,EAASxE,EAAMyE,EAAa6B,QACxC,IAAhBA,IAAwBA,EAAc1G,SAE1C,IAAI6J,EAAO,IAAIpD,EACb/B,EAAKC,EAASC,EAASxE,EAAMyE,GAC7B6B,GAGF,OAAOpD,EAAQ8F,oBAAoBxE,GAC/BiF,EACAA,EAAK9B,OAAO9H,MAAK,SAAS4G,GACxB,OAAOA,EAAO9G,KAAO8G,EAAOhH,MAAQgK,EAAK9B,WAuKjDzB,EAAsBD,GAEtBjC,EAAOiC,EAAInC,EAAmB,aAO9BmC,EAAGvC,GAAkB,WACnB,OAAOzD,MAGTgG,EAAGyD,SAAW,WACZ,MAAO,sBAkCTxG,EAAQyG,KAAO,SAASC,GACtB,IAAID,EAAO,GACX,IAAK,IAAIrK,KAAOsK,EACdD,EAAKtB,KAAK/I,GAMZ,OAJAqK,EAAKE,UAIE,SAASlC,IACd,MAAOgC,EAAKf,OAAQ,CAClB,IAAItJ,EAAMqK,EAAKG,MACf,GAAIxK,KAAOsK,EAGT,OAFAjC,EAAKlI,MAAQH,EACbqI,EAAKhI,MAAO,EACLgI,EAQX,OADAA,EAAKhI,MAAO,EACLgI,IAsCXzE,EAAQ8C,OAASA,EAMjBjB,EAAQ1B,UAAY,CAClByF,YAAa/D,EAEbyD,MAAO,SAASuB,GAcd,GAbA9J,KAAK+J,KAAO,EACZ/J,KAAK0H,KAAO,EAGZ1H,KAAKoH,KAAOpH,KAAKqH,MAAQhH,EACzBL,KAAKN,MAAO,EACZM,KAAKiH,SAAW,KAEhBjH,KAAKmG,OAAS,OACdnG,KAAKV,IAAMe,EAEXL,KAAKmI,WAAWjC,QAAQmC,IAEnByB,EACH,IAAK,IAAIZ,KAAQlJ,KAEQ,MAAnBkJ,EAAKc,OAAO,IACZ3G,EAAO8B,KAAKnF,KAAMkJ,KACjBR,OAAOQ,EAAKe,MAAM,MACrBjK,KAAKkJ,GAAQ7I,IAMrB6J,KAAM,WACJlK,KAAKN,MAAO,EAEZ,IAAIyK,EAAYnK,KAAKmI,WAAW,GAC5BiC,EAAaD,EAAU7B,WAC3B,GAAwB,UAApB8B,EAAWlF,KACb,MAAMkF,EAAW9K,IAGnB,OAAOU,KAAKqK,MAGd/C,kBAAmB,SAASgD,GAC1B,GAAItK,KAAKN,KACP,MAAM4K,EAGR,IAAIzF,EAAU7E,KACd,SAASuK,EAAOC,EAAKC,GAYnB,OAXAlE,EAAOrB,KAAO,QACdqB,EAAOjH,IAAMgL,EACbzF,EAAQ6C,KAAO8C,EAEXC,IAGF5F,EAAQsB,OAAS,OACjBtB,EAAQvF,IAAMe,KAGNoK,EAGZ,IAAK,IAAI7B,EAAI5I,KAAKmI,WAAWQ,OAAS,EAAGC,GAAK,IAAKA,EAAG,CACpD,IAAId,EAAQ9H,KAAKmI,WAAWS,GACxBrC,EAASuB,EAAMQ,WAEnB,GAAqB,SAAjBR,EAAMC,OAIR,OAAOwC,EAAO,OAGhB,GAAIzC,EAAMC,QAAU/H,KAAK+J,KAAM,CAC7B,IAAIW,EAAWrH,EAAO8B,KAAK2C,EAAO,YAC9B6C,EAAatH,EAAO8B,KAAK2C,EAAO,cAEpC,GAAI4C,GAAYC,EAAY,CAC1B,GAAI3K,KAAK+J,KAAOjC,EAAME,SACpB,OAAOuC,EAAOzC,EAAME,UAAU,GACzB,GAAIhI,KAAK+J,KAAOjC,EAAMG,WAC3B,OAAOsC,EAAOzC,EAAMG,iBAGjB,GAAIyC,GACT,GAAI1K,KAAK+J,KAAOjC,EAAME,SACpB,OAAOuC,EAAOzC,EAAME,UAAU,OAG3B,KAAI2C,EAMT,MAAM,IAAI5D,MAAM,0CALhB,GAAI/G,KAAK+J,KAAOjC,EAAMG,WACpB,OAAOsC,EAAOzC,EAAMG,gBAU9BV,OAAQ,SAASrC,EAAM5F,GACrB,IAAK,IAAIsJ,EAAI5I,KAAKmI,WAAWQ,OAAS,EAAGC,GAAK,IAAKA,EAAG,CACpD,IAAId,EAAQ9H,KAAKmI,WAAWS,GAC5B,GAAId,EAAMC,QAAU/H,KAAK+J,MACrB1G,EAAO8B,KAAK2C,EAAO,eACnB9H,KAAK+J,KAAOjC,EAAMG,WAAY,CAChC,IAAI2C,EAAe9C,EACnB,OAIA8C,IACU,UAAT1F,GACS,aAATA,IACD0F,EAAa7C,QAAUzI,GACvBA,GAAOsL,EAAa3C,aAGtB2C,EAAe,MAGjB,IAAIrE,EAASqE,EAAeA,EAAatC,WAAa,GAItD,OAHA/B,EAAOrB,KAAOA,EACdqB,EAAOjH,IAAMA,EAETsL,GACF5K,KAAKmG,OAAS,OACdnG,KAAK0H,KAAOkD,EAAa3C,WAClBzC,GAGFxF,KAAK6K,SAAStE,IAGvBsE,SAAU,SAAStE,EAAQ2B,GACzB,GAAoB,UAAhB3B,EAAOrB,KACT,MAAMqB,EAAOjH,IAcf,MAXoB,UAAhBiH,EAAOrB,MACS,aAAhBqB,EAAOrB,KACTlF,KAAK0H,KAAOnB,EAAOjH,IACM,WAAhBiH,EAAOrB,MAChBlF,KAAKqK,KAAOrK,KAAKV,IAAMiH,EAAOjH,IAC9BU,KAAKmG,OAAS,SACdnG,KAAK0H,KAAO,OACa,WAAhBnB,EAAOrB,MAAqBgD,IACrClI,KAAK0H,KAAOQ,GAGP1C,GAGTsF,OAAQ,SAAS7C,GACf,IAAK,IAAIW,EAAI5I,KAAKmI,WAAWQ,OAAS,EAAGC,GAAK,IAAKA,EAAG,CACpD,IAAId,EAAQ9H,KAAKmI,WAAWS,GAC5B,GAAId,EAAMG,aAAeA,EAGvB,OAFAjI,KAAK6K,SAAS/C,EAAMQ,WAAYR,EAAMI,UACtCG,EAAcP,GACPtC,IAKb,MAAS,SAASuC,GAChB,IAAK,IAAIa,EAAI5I,KAAKmI,WAAWQ,OAAS,EAAGC,GAAK,IAAKA,EAAG,CACpD,IAAId,EAAQ9H,KAAKmI,WAAWS,GAC5B,GAAId,EAAMC,SAAWA,EAAQ,CAC3B,IAAIxB,EAASuB,EAAMQ,WACnB,GAAoB,UAAhB/B,EAAOrB,KAAkB,CAC3B,IAAI6F,EAASxE,EAAOjH,IACpB+I,EAAcP,GAEhB,OAAOiD,GAMX,MAAM,IAAIhE,MAAM,0BAGlBiE,cAAe,SAASxC,EAAUf,EAAYE,GAa5C,OAZA3H,KAAKiH,SAAW,CACdvD,SAAUqC,EAAOyC,GACjBf,WAAYA,EACZE,QAASA,GAGS,SAAhB3H,KAAKmG,SAGPnG,KAAKV,IAAMe,GAGNmF,IAQJvC,EA7sBK,CAotBiBgI,EAAOhI,SAGtC,IACEiI,mBAAqBlI,EACrB,MAAOmI,GAUPC,SAAS,IAAK,yBAAdA,CAAwCpI,K,yDC1uB1C","file":"js/chunk-1e7a806d.ea150b3a.js","sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('b-row',{staticClass:\"mt-2\"},[_c('b-col',{attrs:{\"lg\":\"12\"}},[_c('b-card',{scopedSlots:_vm._u([{key:\"header\",fn:function(){return [_c('h5',{staticClass:\"mb-0\"},[_c('b-icon',{attrs:{\"icon\":\"card-checklist\",\"aria-hidden\":\"true\"}}),_vm._v(\" INFORME CONSOLIDADO POR PERIODO\")],1)]},proxy:true},{key:\"footer\",fn:function(){return [_c('em',[_vm._v(\"Informes consolidados por curso.\")])]},proxy:true}])},[_c('b-card-text',[_c('b-row',[_c('b-col',{attrs:{\"lg\":\"6\"}},[_c('b-form-group',{staticClass:\"etiqueta\",attrs:{\"label\":\"Seleccione Informe:\",\"label-for\":\"datos\"}},[_c('b-form-select',{ref:\"datos\",attrs:{\"id\":\"datos\",\"options\":_vm.comboInformes},on:{\"change\":function($event){_vm.idPeriodo=null,_vm.idSede=null,_vm.idCurso=null}},model:{value:(_vm.idInforme),callback:function ($$v) {_vm.idInforme=$$v},expression:\"idInforme\"}})],1)],1)],1),(_vm.idInforme != null)?_c('b-row',[_c('b-col',{attrs:{\"lg\":\"2\"}},[_c('b-form-group',{staticClass:\"etiqueta\",attrs:{\"label\":\"Periodo:\",\"label-for\":\"periodo\"}},[_c('b-form-select',{ref:\"periodo\",attrs:{\"id\":\"periodo\",\"options\":_vm.comboPeriodos},on:{\"change\":function($event){_vm.idSede=null}},model:{value:(_vm.idPeriodo),callback:function ($$v) {_vm.idPeriodo=$$v},expression:\"idPeriodo\"}})],1)],1),_c('b-col',{attrs:{\"lg\":\"6\"}},[_c('b-form-group',{staticClass:\"etiqueta\",attrs:{\"label\":\"Seleccione la Sede:\",\"label-for\":\"sedes\"}},[_c('b-form-select',{ref:\"sedes\",attrs:{\"id\":\"sedes\",\"options\":_vm.comboSedes,\"disabled\":_vm.idPeriodo!=null ? false : true},on:{\"change\":function($event){_vm.idCurso=null,_vm.ocuparComboCursosSede()}},model:{value:(_vm.idSede),callback:function ($$v) {_vm.idSede=$$v},expression:\"idSede\"}})],1)],1),_c('b-col',{attrs:{\"lg\":\"4\"}},[_c('b-form-group',{staticClass:\"etiqueta\",attrs:{\"label\":\"Seleccione el Curso:\",\"label-for\":\"cursos\"}},[_c('b-form-select',{ref:\"cursos\",attrs:{\"id\":\"cursos\",\"options\":_vm.comboCursosSede,\"disabled\":_vm.idSede!=null ? false : true},on:{\"change\":function($event){return _vm.consultarMatriculados()}},model:{value:(_vm.idCurso),callback:function ($$v) {_vm.idCurso=$$v},expression:\"idCurso\"}})],1)],1)],1):_vm._e(),(_vm.idCurso!=null)?_c('b-row',{staticClass:\"mt-2\"},[_c('b-col',{attrs:{\"lg\":\"12\"}},[_c('hr')]),(_vm.idInforme == 1)?_c('b-col',{attrs:{\"lg\":\"12\"}},[(_vm.btnCargando)?_c('div',[_c('div',{staticClass:\"text-center m-5 text-primary\"},[_c('b-spinner',{staticStyle:{\"width\":\"3rem\",\"height\":\"3rem\"},attrs:{\"label\":\"Spinner\"}}),_c('br'),_c('strong',[_vm._v(\"Cargando planilla...\")])],1)]):_c('div',[_c('vue-good-table',{ref:\"table\",attrs:{\"columns\":_vm.encabColumnas,\"rows\":_vm.listaMatriculados,\"styleClass\":\"vgt-table condensed bordered striped\"}},[_c('div',{attrs:{\"slot\":\"emptystate\"},slot:\"emptystate\"},[_c('h5',{staticClass:\"text-danger ml-5\"},[_vm._v(\"No existen estudiantes matriculados\")])])]),_c('b-row',[_c('b-col',{attrs:{\"lg\":\"12\"}},[_c('b-button',{staticClass:\"small mx-1 mt-3\",attrs:{\"variant\":\"primary\"},on:{\"click\":_vm.imprimirConsolidado}},[_vm._v(\"Imprimir Consolidado\")]),_c('vue-excel-xlsx',{staticClass:\"small mx-1 mt-3 btn btn-outline-primary\",attrs:{\"data\":_vm.listaMatriculados,\"columns\":_vm.encabColumnas,\"file-name\":'ConsolidadoNotas-' + new Date().toLocaleDateString(),\"file-type\":'xlsx',\"sheet-name\":'Consolidado'}},[_vm._v(\" Exportar Consolidado Evaluaciones a Excel \")])],1)],1)],1)]):_vm._e(),(_vm.idInforme == 2)?_c('b-col',{attrs:{\"lg\":\"12\"}},[(_vm.btnCargando)?_c('div',[_c('div',{staticClass:\"text-center m-5 text-primary\"},[_c('b-spinner',{staticStyle:{\"width\":\"3rem\",\"height\":\"3rem\"},attrs:{\"label\":\"Spinner\"}}),_c('br'),_c('strong',[_vm._v(\"Cargando planilla...\")])],1)]):_c('div',[_c('vue-good-table',{ref:\"table\",attrs:{\"columns\":_vm.encabColumnasAreas,\"rows\":_vm.listaMatriculados,\"styleClass\":\"vgt-table condensed bordered striped\"}},[_c('div',{attrs:{\"slot\":\"emptystate\"},slot:\"emptystate\"},[_c('h5',{staticClass:\"text-danger ml-5\"},[_vm._v(\"No existen estudiantes matriculados\")])])]),_c('b-row',[_c('b-col',{attrs:{\"lg\":\"12\"}},[_c('b-button',{staticClass:\"small mx-1 mt-3\",attrs:{\"variant\":\"primary\"},on:{\"click\":_vm.imprimirConsolidado}},[_vm._v(\"Imprimir Consolidado\")]),_c('vue-excel-xlsx',{staticClass:\"small mx-1 mt-3 btn btn-outline-primary\",attrs:{\"data\":_vm.listaMatriculados,\"columns\":_vm.encabColumnasAreas,\"file-name\":'ConsolidadoNotas-' + new Date().toLocaleDateString(),\"file-type\":'xlsx',\"sheet-name\":'Consolidado'}},[_vm._v(\" Exportar Consolidado Evaluaciones a Excel \")])],1)],1)],1)]):_vm._e(),(_vm.idInforme == 3)?_c('b-col',{attrs:{\"lg\":\"12\"}},[(_vm.btnCargando)?_c('div',[_c('div',{staticClass:\"text-center m-5 text-primary\"},[_c('b-spinner',{staticStyle:{\"width\":\"3rem\",\"height\":\"3rem\"},attrs:{\"label\":\"Spinner\"}}),_c('br'),_c('strong',[_vm._v(\"Cargando planilla...\")])],1)]):_c('div',[_c('vue-good-table',{ref:\"table\",attrs:{\"columns\":_vm.encabColumnasRecup,\"rows\":_vm.listaMatriculados,\"styleClass\":\"vgt-table condensed bordered striped\"}},[_c('div',{attrs:{\"slot\":\"emptystate\"},slot:\"emptystate\"},[_c('h5',{staticClass:\"text-danger ml-5\"},[_vm._v(\"No existen estudiantes matriculados\")])])]),_c('b-row',[_c('b-col',{attrs:{\"lg\":\"12\"}},[_c('b-button',{staticClass:\"small mx-1 mt-3\",attrs:{\"variant\":\"primary\"},on:{\"click\":_vm.imprimirConsolidado}},[_vm._v(\"Imprimir Consolidado\")]),_c('vue-excel-xlsx',{staticClass:\"small mx-1 mt-3 btn btn-outline-primary\",attrs:{\"data\":_vm.listaMatriculados,\"columns\":_vm.encabColumnasRecup,\"file-name\":'ConsolidadoNotas-' + new Date().toLocaleDateString(),\"file-type\":'xlsx',\"sheet-name\":'Consolidado'}},[_vm._v(\" Exportar Consolidado Evaluaciones a Excel \")])],1)],1)],1)]):_vm._e(),(_vm.idInforme == 4)?_c('b-col',{attrs:{\"lg\":\"12\"}},[(_vm.btnCargando)?_c('div',[_c('div',{staticClass:\"text-center m-5 text-primary\"},[_c('b-spinner',{staticStyle:{\"width\":\"3rem\",\"height\":\"3rem\"},attrs:{\"label\":\"Spinner\"}}),_c('br'),_c('strong',[_vm._v(\"Cargando planilla...\")])],1)]):_c('div',[_c('vue-good-table',{ref:\"table\",attrs:{\"columns\":_vm.encabColumnasAreasRecup,\"rows\":_vm.listaMatriculados,\"styleClass\":\"vgt-table condensed bordered striped\"}},[_c('div',{attrs:{\"slot\":\"emptystate\"},slot:\"emptystate\"},[_c('h5',{staticClass:\"text-danger ml-5\"},[_vm._v(\"No existen estudiantes matriculados\")])])]),_c('b-row',[_c('b-col',{attrs:{\"lg\":\"12\"}},[_c('b-button',{staticClass:\"small mx-1 mt-3\",attrs:{\"variant\":\"primary\"},on:{\"click\":_vm.imprimirConsolidado}},[_vm._v(\"Imprimir Consolidado\")]),_c('vue-excel-xlsx',{staticClass:\"small mx-1 mt-3 btn btn-outline-primary\",attrs:{\"data\":_vm.listaMatriculados,\"columns\":_vm.encabColumnasAreasRecup,\"file-name\":'ConsolidadoNotas-' + new Date().toLocaleDateString(),\"file-type\":'xlsx',\"sheet-name\":'Consolidado'}},[_vm._v(\" Exportar Consolidado Evaluaciones a Excel \")])],1)],1)],1)]):_vm._e()],1):_vm._e()],1)],1)],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div>\n    <b-row class=\"mt-2\">\n      <b-col lg=\"12\">\n        <b-card>\n          <template #header>\n            <h5 class=\"mb-0\"><b-icon icon=\"card-checklist\" aria-hidden=\"true\"></b-icon> INFORME CONSOLIDADO POR PERIODO</h5>\n          </template>\n          <b-card-text>\n            <b-row>\n              <b-col lg=\"6\">\n                <b-form-group label=\"Seleccione Informe:\" label-for=\"datos\" class=\"etiqueta\">\n                  <b-form-select  id=\"datos\" ref=\"datos\" v-model=\"idInforme\" :options=\"comboInformes\" @change=\"idPeriodo=null,idSede=null,idCurso=null\"></b-form-select>\n                </b-form-group>\n              </b-col>\n            </b-row>\n            <b-row v-if=\"idInforme != null\">\n              <b-col lg=\"2\">\n                <b-form-group label=\"Periodo:\" label-for=\"periodo\" class=\"etiqueta\">\n                  <b-form-select id=\"periodo\" ref=\"periodo\" v-model=\"idPeriodo\" :options=\"comboPeriodos\" @change=\"idSede=null\"></b-form-select>\n                </b-form-group>\n              </b-col>\n              <b-col lg=\"6\">\n                <b-form-group label=\"Seleccione la Sede:\" label-for=\"sedes\" class=\"etiqueta\">\n                  <b-form-select  id=\"sedes\" ref=\"sedes\" v-model=\"idSede\" :options=\"comboSedes\" @change=\"idCurso=null,ocuparComboCursosSede()\" :disabled=\"idPeriodo!=null ? false : true\"></b-form-select>\n                </b-form-group>\n              </b-col>\n              <b-col lg=\"4\">\n                <b-form-group label=\"Seleccione el Curso:\" label-for=\"cursos\" class=\"etiqueta\">\n                  <b-form-select id=\"cursos\" ref=\"cursos\" v-model=\"idCurso\" :options=\"comboCursosSede\" @change=\"consultarMatriculados()\" :disabled=\"idSede!=null ? false : true\"></b-form-select>\n                </b-form-group>\n              </b-col>\n            </b-row>\n            <b-row class=\"mt-2\" v-if=\"idCurso!=null\">\n              <b-col lg=\"12\"><hr></b-col>\n              <!-- **************** CONSOLIDADO ASIGNATURAS ************** -->\n              <b-col lg=\"12\" v-if=\"idInforme == 1\">\n                <div v-if=\"btnCargando\">\n                  <div class=\"text-center m-5 text-primary\">\n                    <b-spinner style=\"width: 3rem; height: 3rem;\" label=\"Spinner\"></b-spinner>\n                    <br><strong>Cargando planilla...</strong>\n                  </div>\n                </div>\n                <div v-else>\n                  <vue-good-table ref=\"table\" :columns=\"encabColumnas\" :rows=\"listaMatriculados\" styleClass=\"vgt-table condensed bordered striped\">\n                    <div slot=\"emptystate\">\n                      <h5 class=\"text-danger ml-5\">No existen estudiantes matriculados</h5>\n                    </div>\n                  </vue-good-table>\n                  <b-row>\n                    <b-col lg=\"12\">\n                      <b-button class=\"small mx-1 mt-3\" variant=\"primary\" @click=\"imprimirConsolidado\">Imprimir Consolidado</b-button>\n                      <vue-excel-xlsx class=\"small mx-1 mt-3 btn btn-outline-primary\" :data=\"listaMatriculados\" :columns=\"encabColumnas\" :file-name=\"'ConsolidadoNotas-' + new Date().toLocaleDateString()\" :file-type=\"'xlsx'\" :sheet-name=\"'Consolidado'\">\n                        Exportar Consolidado Evaluaciones a Excel\n                      </vue-excel-xlsx>\n                    </b-col>\n                  </b-row>\n                </div>\n              </b-col>\n              <!-- **************** CONSOLIDADO AREAS ************** -->\n              <b-col lg=\"12\" v-if=\"idInforme == 2\">\n                <div v-if=\"btnCargando\">\n                  <div class=\"text-center m-5 text-primary\">\n                    <b-spinner style=\"width: 3rem; height: 3rem;\" label=\"Spinner\"></b-spinner>\n                    <br><strong>Cargando planilla...</strong>\n                  </div>\n                </div>\n                <div v-else>\n                  <vue-good-table ref=\"table\" :columns=\"encabColumnasAreas\" :rows=\"listaMatriculados\" styleClass=\"vgt-table condensed bordered striped\">\n                    <div slot=\"emptystate\">\n                      <h5 class=\"text-danger ml-5\">No existen estudiantes matriculados</h5>\n                    </div>\n                  </vue-good-table>\n                  <b-row>\n                    <b-col lg=\"12\">\n                      <b-button class=\"small mx-1 mt-3\" variant=\"primary\" @click=\"imprimirConsolidado\">Imprimir Consolidado</b-button>\n                      <vue-excel-xlsx class=\"small mx-1 mt-3 btn btn-outline-primary\" :data=\"listaMatriculados\" :columns=\"encabColumnasAreas\" :file-name=\"'ConsolidadoNotas-' + new Date().toLocaleDateString()\" :file-type=\"'xlsx'\" :sheet-name=\"'Consolidado'\">\n                        Exportar Consolidado Evaluaciones a Excel\n                      </vue-excel-xlsx>\n                    </b-col>\n                  </b-row>\n                </div>\n              </b-col>\n              <!-- **************** CONSOLIDADO ASIGNATURAS CON RECUPERACIONES ************** -->\n              <b-col lg=\"12\" v-if=\"idInforme == 3\">\n                <div v-if=\"btnCargando\">\n                  <div class=\"text-center m-5 text-primary\">\n                    <b-spinner style=\"width: 3rem; height: 3rem;\" label=\"Spinner\"></b-spinner>\n                    <br><strong>Cargando planilla...</strong>\n                  </div>\n                </div>\n                <div v-else>\n                  <vue-good-table ref=\"table\" :columns=\"encabColumnasRecup\" :rows=\"listaMatriculados\" styleClass=\"vgt-table condensed bordered striped\">\n                    <div slot=\"emptystate\">\n                      <h5 class=\"text-danger ml-5\">No existen estudiantes matriculados</h5>\n                    </div>\n                  </vue-good-table>\n                  <b-row>\n                    <b-col lg=\"12\">\n                      <b-button class=\"small mx-1 mt-3\" variant=\"primary\" @click=\"imprimirConsolidado\">Imprimir Consolidado</b-button>\n                      <vue-excel-xlsx class=\"small mx-1 mt-3 btn btn-outline-primary\" :data=\"listaMatriculados\" :columns=\"encabColumnasRecup\" :file-name=\"'ConsolidadoNotas-' + new Date().toLocaleDateString()\" :file-type=\"'xlsx'\" :sheet-name=\"'Consolidado'\">\n                        Exportar Consolidado Evaluaciones a Excel\n                      </vue-excel-xlsx>\n                    </b-col>\n                  </b-row>\n                </div>\n              </b-col>\n              <!-- **************** CONSOLIDADO AREAS CON RECUPERACIONES ************** -->\n              <b-col lg=\"12\" v-if=\"idInforme == 4\">\n                <div v-if=\"btnCargando\">\n                  <div class=\"text-center m-5 text-primary\">\n                    <b-spinner style=\"width: 3rem; height: 3rem;\" label=\"Spinner\"></b-spinner>\n                    <br><strong>Cargando planilla...</strong>\n                  </div>\n                </div>\n                <div v-else>\n                  <vue-good-table ref=\"table\" :columns=\"encabColumnasAreasRecup\" :rows=\"listaMatriculados\" styleClass=\"vgt-table condensed bordered striped\">\n                    <div slot=\"emptystate\">\n                      <h5 class=\"text-danger ml-5\">No existen estudiantes matriculados</h5>\n                    </div>\n                  </vue-good-table>\n                  <b-row>\n                    <b-col lg=\"12\">\n                      <b-button class=\"small mx-1 mt-3\" variant=\"primary\" @click=\"imprimirConsolidado\">Imprimir Consolidado</b-button>\n                      <vue-excel-xlsx class=\"small mx-1 mt-3 btn btn-outline-primary\" :data=\"listaMatriculados\" :columns=\"encabColumnasAreasRecup\" :file-name=\"'ConsolidadoNotas-' + new Date().toLocaleDateString()\" :file-type=\"'xlsx'\" :sheet-name=\"'Consolidado'\">\n                        Exportar Consolidado Evaluaciones a Excel\n                      </vue-excel-xlsx>\n                    </b-col>\n                  </b-row>\n                </div>\n              </b-col>\n\n\n            </b-row>\n          </b-card-text>\n          <template #footer>\n            <em>Informes consolidados por curso.</em>\n          </template>\n        </b-card>\n      </b-col>\n    </b-row>\n  </div>\n</template>\n\n<script>\n  import axios from \"axios\"\n  import * as CONFIG from '@/assets/config.js'\n  import 'vue-good-table/dist/vue-good-table.css'\n  import { VueGoodTable } from 'vue-good-table'\n\n  export default {\n    name: 'consolidadoscurso',\n    components: {\n      VueGoodTable\n    },\n    data () {\n      return {\n        idInforme: null,\n        comboInformes: [\n          { 'value': 1, 'text': 'CONSOLIDADO DE EVALUACIONES POR ASIGNATURA'},\n          { 'value': 2, 'text': 'CONSOLIDADO DE EVALUACIONES POR AREA'},\n          { 'value': 3, 'text': 'CONSOLIDADO DE EVALUACIONES POR ASIGNATURA CON RECUPERACIONES'},\n          { 'value': 4, 'text': 'CONSOLIDADO DE EVALUACIONES POR AREA CON RECUPERACIONES'},\n        ],\n        comboSedes: [],\n        idSede: null,\n        comboCursosSede: [],\n        idCurso: null,\n        listaMatriculados: [],\n        encabColumnas: [],\n        encabColumnasAreas: [],\n        listaAsignaturasCurso: [],\n        idPeriodo: 1,\n        comboPeriodos: [],\n        nombreSede: null,\n        nombreCurso: null,\n        btnCargando: true,\n        idNivel: null,\n        listaTotalesAsignaturas: [],\n        listaAreasAsignaturasCurso: []\n      }\n    },\n    methods: {\n      imprimirConsolidado() {\n        // Crear una nueva ventana para imprimir\n        const printWindow = window.open(\"Consolidados\", \"_blank\");\n        // Obtener el contenido HTML de la tabla\n        const tableHtml = this.$refs.table.$el.querySelector(\"table\").outerHTML;\n        let fecha = 'Fecha: ' + new Date().toLocaleString()\n        // Estilos básicos para la impresión\n        const style = `\n          <style>\n            @media all {\n              div.saltopagina{\n                display: none;\n              }\n            }\n            @media print{\n              div.saltopagina{\n                display:block; \n                page-break-before:always;\n              }\n            }\t\n            table {\n              width: 100%;\n              border-collapse: collapse;\n              margin: 10px 0;\n              font-size: 12px;\n              text-align: left;\n            }\n            table, th, td {\n              border: 1px solid black;\n            }\n            th, td {\n              padding-left: 5px;\n            }\n            th {\n              background-color: #f2f2f2;\n            }\n          </style>\n        `;\n\n        // Insertar el contenido HTML y los estilos en la nueva ventana\n        printWindow.document.write(`\n          <html>\n            <head>\n              <title>Consolidados</title>\n              ${style}\n            </head>\n            <body>\n              <p style=\"text-align: center; font-size: 10px;\">SECRETARÍA DE EDUCACIÓN TERRITORIAL DE TUNJA<br><b>${this.$store.state.nombreInstitucion}</b><br>TUNJA - BOYACÁ<br>CONSOLIDADO DE EVALUACIONES POR PERIODO - AÑO LECTIVO ${this.$store.state.aLectivo}<br>Sede: ${this.nombreSede} | Curso: ${this.nombreCurso} | Periodo: ${this.idPeriodo}</p>\n              ${tableHtml}\n              <div style=\"text-align: right;\"><i>${fecha}</i></div>\n            </body>\n          </html>\n        `);\n\n        // Iniciar la impresión y cerrar la ventana\n        //printWindow.document.close();\n        printWindow.print();\n      },\n      consultarMatriculados() {\n        this.btnCargando = true\n        if (this.idInforme == 1) {\n          this.consultarConsolidadoAsignaturas()\n        } else if (this.idInforme == 2) {\n          this.consultarConsolidadoAreas()\n        } else if (this.idInforme == 3) {\n          this.consultarConsolidadoAsignaturasRecuperaciones()\n        } else if (this.idInforme == 4) {\n          this.consultarConsolidadoAreasRecuperaciones()\n        }\n      },\n      async consultarConsolidadoAreas() {\n        this.nombreSede = document.getElementById('sedes')[document.getElementById('sedes').selectedIndex].text\n        this.nombreCurso = document.getElementById('cursos')[document.getElementById('cursos').selectedIndex].text\n        this.$store.state.datosCursos.forEach(element => {\n          if (element.id == this.idCurso) {\n            this.idNivel = element.id_nivel\n          }\n        })\n        this.listaAreasAsignaturasCurso = []\n        await axios\n        .get(CONFIG.ROOT_PATH + 'academico/asignacioncursoareas', {params: {idCurso: this.idCurso, idInstitucion: this.$store.state.idInstitucion, vigencia: this.$store.state.aLectivo}})\n        .then(response => {\n          if (response.data.error){\n            this.mensajeEmergente('danger',CONFIG.TITULO_MSG,response.data.mensaje + ' - Lista asignaturas curso')\n            this.btnCargando = false\n          } else{\n            if (response.data.datos != 0) {\n              this.listaAreasAsignaturasCurso = response.data.datos\n            }\n          }\n        })\n        .catch(err => {\n          this.mensajeEmergente('danger',CONFIG.TITULO_MSG,'Algo salio mal y no se pudo realizar: Lista asignación docentes curso. Intente más tarde.' + err)\n          this.btnCargando = false\n        })\n        if (this.idNivel == 1) {\n          this.listaAsignaturasCurso = []\n          await axios\n          .get(CONFIG.ROOT_PATH + 'academico/asignacioncurso', {params: {idCurso: this.idCurso, idInstitucion: this.$store.state.idInstitucion}})\n          .then(response => {\n            if (response.data.error){\n              this.mensajeEmergente('danger',CONFIG.TITULO_MSG,response.data.mensaje + ' - Lista asignaturas curso')\n              this.btnCargando = false\n            } else{\n              if (response.data.datos != 0) {\n                this.listaAsignaturasCurso = response.data.datos\n              }\n            }\n            //console.log(JSON.stringify(this.listaAsignaturasCurso))\n          })\n          .catch(err => {\n            this.mensajeEmergente('danger',CONFIG.TITULO_MSG,'Algo salio mal y no se pudo realizar: Lista asignación docentes curso. Intente más tarde.' + err)\n            this.btnCargando = false\n          })\n          this.encabColumnasAreas = []\n          this.encabColumnasAreas.push({label: 'Estudiante', field: 'estudiante', sortable: false})\n          this.listaAsignaturasCurso.forEach(element => {\n            this.encabColumnasAreas.push({label: element.nemo, field: element.nemo, sortable: false, tdClass: 'text-center'})\n          })\n          this.listaMatriculados = []\n          await axios\n          .get(CONFIG.ROOT_PATH + 'academico/estudiantes/curso/consolidadoasignaturas', {params: {idCurso: this.idCurso, periodo: this.idPeriodo}})\n          .then(response => {\n            if (response.data.error){\n              this.mensajeEmergente('danger',CONFIG.TITULO_MSG,response.data.mensaje + ' - consolidado asignaturas curso')\n              this.btnCargando = false\n            } else{\n              if (response.data.datos != 0) {\n                //console.log(JSON.stringify(response.data.datos))\n                let datosEstudiante = {}\n                response.data.datos.forEach(element => {         \n                  datosEstudiante.estudiante = element.estudiante\n                  element.notas.forEach(element2 => {\n                    if (element2.orden == 99) {\n                      if ( this.$store.state.datosSecciones[0].tipoValComp == 0) {\n                        datosEstudiante[element2.nemo] = element2.definitivacompor\n                      } else {\n                        datosEstudiante[element2.nemo] = Number(element2.definitiva).toFixed(1) == 0 ? '' : Number(element2.definitiva).toFixed(1)\n                      }\n                    } else {\n                      datosEstudiante[element2.nemo] = element2.definitivapree\n                    }\n                  })\n                  this.listaMatriculados.push(JSON.parse(JSON.stringify(datosEstudiante)))\n                  //console.log(JSON.stringify(datosEstudiante))\n                })\n              }\n              setTimeout(()=>{\n                this.btnCargando = false\n              },100)\n            }\n            //console.log(JSON.stringify(this.listaMatriculados))\n          })\n          .catch(err => {\n            this.mensajeEmergente('danger',CONFIG.TITULO_MSG,'Algo salio mal y no se pudo realizar: consolidado asignaturas curso. Intente más tarde.' + err)\n            this.btnCargando = false\n          })\n        } else {\n          let bajosArea = {}\n          bajosArea.estudiante = 'Total Desempeño Bajo'\n          this.encabColumnasAreas = []\n          this.encabColumnasAreas.push({label: 'Estudiante', field: 'estudiante', sortable: false})\n          this.encabColumnasAreas.push({label: '#', field: 'orden', sortable: false})\n          this.listaAreasAsignaturasCurso.forEach(elementAr => {\n            this.encabColumnasAreas.push({label: elementAr.nemoArea, field: elementAr.nemoArea, sortable: false, tdClass: 'text-center'})\n            if ((elementAr.asignaturas).length > 1) {\n              elementAr.asignaturas.forEach(elementAs => {\n                this.encabColumnasAreas.push({label: elementAs.nemo, field: elementAs.nemo, sortable: false, tdClass: 'text-center'})\n                bajosArea[elementAs.nemo] = 0\n              })\n              bajosArea[elementAr.nemoArea] = 0\n            } else {\n              bajosArea[elementAr.nemoArea] = 0\n            }\n          })\n          this.encabColumnasAreas.push({label: '#', field: 'orden', sortable: false})\n          this.encabColumnasAreas.push({label: 'BJ', field: 'bajE', sortable: false, tdClass: 'text-center'})\n          this.encabColumnasAreas.push({label: 'BS', field: 'basE', sortable: false, tdClass: 'text-center'})\n          this.encabColumnasAreas.push({label: 'AL', field: 'altE', sortable: false, tdClass: 'text-center'})\n          this.encabColumnasAreas.push({label: 'SU', field: 'supE', sortable: false, tdClass: 'text-center'})\n          this.encabColumnasAreas.push({label: 'PRO', field: 'promedioAsignatura', sortable: false, tdClass: 'text-center'})\n          this.encabColumnasAreas.push({label: 'PTO', field: 'puesto', sortable: false, tdClass: 'text-center'})\n          this.encabColumnasAreas.push({label: 'AJ', field: 'ausJ', sortable: false, tdClass: 'text-center'})\n          this.encabColumnasAreas.push({label: 'AS', field: 'ausS', sortable: false, tdClass: 'text-center'})\n\n          this.listaMatriculados = []\n          let totalBajos = 0\n          let listaPuestos = []\n          let numOrden = 1\n          await axios\n          .get(CONFIG.ROOT_PATH + 'academico/estudiantes/curso/consolidadoasignaturas', {params: {idCurso: this.idCurso, periodo: this.idPeriodo}})\n          .then(response => {\n            if (response.data.error){\n              this.mensajeEmergente('danger',CONFIG.TITULO_MSG,response.data.mensaje + ' - consolidado asignaturas curso')\n              this.btnCargando = false\n            } else{\n              if (response.data.datos != 0) {\n                //console.log(JSON.stringify(response.data.datos))\n                response.data.datos.forEach(element => {         \n                  let contAsignaturas = 0\n                  let sumaAsignaturas = 0\n                  let bajE = 0\n                  let basE = 0\n                  let altE = 0\n                  let supE = 0\n                  let ausJ = 0\n                  let ausS = 0\n                  let datosEstudiante = {}\n                  datosEstudiante.estudiante = element.estudiante\n                  datosEstudiante.orden = numOrden\n                  datosEstudiante.id = element.id\n                  this.listaAreasAsignaturasCurso.forEach(elementAr => {\n                    if ((elementAr.asignaturas).length > 1) {\n                      let sumaPromArea = 0\n                      elementAr.asignaturas.forEach(elementAs => {\n                        let indice = element.notas.findIndex(nota => nota.id_asignatura_curso === elementAs.idAsignaturaCurso)\n                        if (indice >= 0) {\n                          if (isNaN(element.notas[indice].definitiva) || element.notas[indice].definitiva === null || element.notas[indice].definitiva <= 0 || element.notas[indice].definitiva > this.$store.state.datosSecciones[0].maxSup) {\n                            datosEstudiante[elementAs.nemo] = ''\n                          } else {\n                            datosEstudiante[elementAs.nemo] = Number(element.notas[indice].definitiva).toFixed(1)\n                            sumaPromArea += (element.notas[indice].definitiva * elementAs.porcentaje) / 100\n                            if (element.notas[indice].definitiva > 0 && element.notas[indice].definitiva < this.$store.state.datosSecciones[0].minBas) {\n                              bajE++\n                              bajosArea[elementAs.nemo]++\n                              totalBajos++\n                            } else if (element.notas[indice].definitiva >= this.$store.state.datosSecciones[0].minBas && element.notas[indice].definitiva < this.$store.state.datosSecciones[0].minAlt) {\n                              basE++\n                            } else if (element.notas[indice].definitiva >= this.$store.state.datosSecciones[0].minAlt && element.notas[indice].definitiva < this.$store.state.datosSecciones[0].minSup) {\n                              altE++\n                            } else if (element.notas[indice].definitiva >= this.$store.state.datosSecciones[0].minSup && element.notas[indice].definitiva <= this.$store.state.datosSecciones[0].maxSup) {\n                              supE++\n                            }\n                            sumaAsignaturas += element.notas[indice].definitiva\n                            ausJ += Number(element.notas[indice].ausJ)\n                            ausS += Number(element.notas[indice].ausS)\n                            contAsignaturas++\n                          }\n                        }\n                      })\n                      datosEstudiante[elementAr.nemoArea] = this.redondear(sumaPromArea).toFixed(1)\n                      if (datosEstudiante[elementAr.nemoArea] > 0 && datosEstudiante[elementAr.nemoArea] < this.$store.state.datosSecciones[0].minBas) {\n                        bajosArea[elementAr.nemoArea]++\n                      }\n                    } else {\n                      let indice = element.notas.findIndex(nota => nota.id_area === elementAr.idArea)\n                      if (indice >= 0) {\n                        if (element.notas[indice].orden == 99) {\n                          if ( this.$store.state.datosSecciones[0].tipoValComp == 0) {\n                            datosEstudiante[elementAr.nemoArea] = element.notas[indice].definitivacompor\n                          } else {\n                            if (isNaN(element.notas[indice].definitiva) || element.notas[indice].definitiva === null || element.notas[indice].definitiva < 0 || element.notas[indice].definitiva > this.$store.state.datosSecciones[0].maxSup) {\n                              datosEstudiante[elementAr.nemoArea] = ''\n                            } else {\n                              datosEstudiante[elementAr.nemoArea] = Number(element.notas[indice].definitiva).toFixed(1)\n                            }\n                          }\n                        } else {\n                          if (isNaN(element.notas[indice].definitiva) || element.notas[indice].definitiva === null || element.notas[indice].definitiva <= 0 || element.notas[indice].definitiva > this.$store.state.datosSecciones[0].maxSup) {\n                            datosEstudiante[elementAr.nemoArea] = ''\n                          } else {\n                            datosEstudiante[elementAr.nemoArea] = Number(element.notas[indice].definitiva).toFixed(1)\n                            if (element.notas[indice].definitiva > 0 && element.notas[indice].definitiva < this.$store.state.datosSecciones[0].minBas) {\n                              bajE++\n                              bajosArea[elementAr.nemoArea]++\n                              totalBajos++\n                            } else if (element.notas[indice].definitiva >= this.$store.state.datosSecciones[0].minBas && element.notas[indice].definitiva < this.$store.state.datosSecciones[0].minAlt) {\n                              basE++\n                            } else if (element.notas[indice].definitiva >= this.$store.state.datosSecciones[0].minAlt && element.notas[indice].definitiva < this.$store.state.datosSecciones[0].minSup) {\n                              altE++\n                            } else if (element.notas[indice].definitiva >= this.$store.state.datosSecciones[0].minSup && element.notas[indice].definitiva <= this.$store.state.datosSecciones[0].maxSup) {\n                              supE++\n                            }\n                            sumaAsignaturas += element.notas[indice].definitiva\n                            ausJ += Number(element.notas[indice].ausJ)\n                            ausS += Number(element.notas[indice].ausS)\n                            contAsignaturas++\n                          }\n                        }\n                      }\n                    }\n                  })\n                  if (contAsignaturas > 0) {\n                    datosEstudiante.promedioAsignatura = Number(sumaAsignaturas / contAsignaturas).toFixed(1)\n                    listaPuestos.push({'id': element.id, 'promedio': sumaAsignaturas / contAsignaturas})\n                    datosEstudiante.bajE = bajE\n                    datosEstudiante.basE = basE\n                    datosEstudiante.altE = altE\n                    datosEstudiante.supE = supE\n                    datosEstudiante.ausJ = ausJ\n                    datosEstudiante.ausS = ausS\n                    datosEstudiante.puesto = ''\n                  } else {\n                    datosEstudiante.promedioAsignatura = ''\n                    listaPuestos.push({'id': element.id, 'promedio': 0})\n                  }\n                  this.listaMatriculados.push(JSON.parse(JSON.stringify(datosEstudiante)))\n                  //console.log(JSON.stringify(datosEstudiante))\n                  numOrden++\n                })\n                listaPuestos.sort(((a, b) => b.promedio - a.promedio));\n                //console.log(JSON.stringify(listaPuestos))\n                let numPuesto = 1\n                listaPuestos.forEach(element2 => {\n                  this.listaMatriculados.forEach(element => {\n                    if (element.id == element2.id) {\n                      element.puesto = numPuesto\n                      numPuesto++\n                    }\n                  })\n                })\n                bajosArea.bajE = totalBajos\n                this.listaMatriculados.push(JSON.parse(JSON.stringify(bajosArea)))\n                setTimeout(()=>{\n                  this.btnCargando = false\n                },100)\n              } else {\n                this.btnCargando = false\n              }\n            }\n            //console.log(JSON.stringify(this.listaMatriculados))\n          })\n          .catch(err => {\n            this.mensajeEmergente('danger',CONFIG.TITULO_MSG,'Algo salio mal y no se pudo realizar: consolidado areas curso. Intente más tarde.' + err)\n            this.btnCargando = false\n          })\n        }\n      },\n      async consultarConsolidadoAreasRecuperaciones() {\n        this.nombreSede = document.getElementById('sedes')[document.getElementById('sedes').selectedIndex].text\n        this.nombreCurso = document.getElementById('cursos')[document.getElementById('cursos').selectedIndex].text\n        this.$store.state.datosCursos.forEach(element => {\n          if (element.id == this.idCurso) {\n            this.idNivel = element.id_nivel\n          }\n        })\n        this.listaAreasAsignaturasCurso = []\n        await axios\n        .get(CONFIG.ROOT_PATH + 'academico/asignacioncursoareas', {params: {idCurso: this.idCurso, idInstitucion: this.$store.state.idInstitucion, vigencia: this.$store.state.aLectivo}})\n        .then(response => {\n          if (response.data.error){\n            this.mensajeEmergente('danger',CONFIG.TITULO_MSG,response.data.mensaje + ' - Lista asignaturas curso')\n            this.btnCargando = false\n          } else{\n            if (response.data.datos != 0) {\n              this.listaAreasAsignaturasCurso = response.data.datos\n            }\n          }\n        })\n        .catch(err => {\n          this.mensajeEmergente('danger',CONFIG.TITULO_MSG,'Algo salio mal y no se pudo realizar: Lista asignación docentes curso. Intente más tarde.' + err)\n          this.btnCargando = false\n        })\n        if (this.idNivel == 1) {\n          this.listaAsignaturasCurso = []\n          await axios\n          .get(CONFIG.ROOT_PATH + 'academico/asignacioncurso', {params: {idCurso: this.idCurso, idInstitucion: this.$store.state.idInstitucion}})\n          .then(response => {\n            if (response.data.error){\n              this.mensajeEmergente('danger',CONFIG.TITULO_MSG,response.data.mensaje + ' - Lista asignaturas curso')\n              this.btnCargando = false\n            } else{\n              if (response.data.datos != 0) {\n                this.listaAsignaturasCurso = response.data.datos\n              }\n            }\n            //console.log(JSON.stringify(this.listaAsignaturasCurso))\n          })\n          .catch(err => {\n            this.mensajeEmergente('danger',CONFIG.TITULO_MSG,'Algo salio mal y no se pudo realizar: Lista asignación docentes curso. Intente más tarde.' + err)\n            this.btnCargando = false\n          })\n          this.encabColumnasAreasRecup = []\n          this.encabColumnasAreasRecup.push({label: 'Estudiante', field: 'estudiante', sortable: false})\n          this.listaAsignaturasCurso.forEach(element => {\n            this.encabColumnasAreasRecup.push({label: element.nemo, field: element.nemo, sortable: false, tdClass: 'text-center'})\n          })\n          this.listaMatriculados = []\n          await axios\n          .get(CONFIG.ROOT_PATH + 'academico/estudiantes/curso/consolidadoasignaturas', {params: {idCurso: this.idCurso, periodo: this.idPeriodo}})\n          .then(response => {\n            if (response.data.error){\n              this.mensajeEmergente('danger',CONFIG.TITULO_MSG,response.data.mensaje + ' - consolidado asignaturas curso')\n              this.btnCargando = false\n            } else{\n              if (response.data.datos != 0) {\n                //console.log(JSON.stringify(response.data.datos))\n                let datosEstudiante = {}\n                response.data.datos.forEach(element => {         \n                  datosEstudiante.estudiante = element.estudiante\n                  element.notas.forEach(element2 => {\n                    if (element2.orden == 99) {\n                      if ( this.$store.state.datosSecciones[0].tipoValComp == 0) {\n                        datosEstudiante[element2.nemo] = element2.definitivacompor\n                      } else {\n                        datosEstudiante[element2.nemo] = Number(element2.definitiva).toFixed(1) == 0 ? '' : Number(element2.definitiva).toFixed(1)\n                      }\n                    } else {\n                      datosEstudiante[element2.nemo] = element2.definitivapree\n                    }\n                  })\n                  this.listaMatriculados.push(JSON.parse(JSON.stringify(datosEstudiante)))\n                  //console.log(JSON.stringify(datosEstudiante))\n                })\n              }\n              setTimeout(()=>{\n                this.btnCargando = false\n              },100)\n            }\n            //console.log(JSON.stringify(this.listaMatriculados))\n          })\n          .catch(err => {\n            this.mensajeEmergente('danger',CONFIG.TITULO_MSG,'Algo salio mal y no se pudo realizar: consolidado asignaturas curso. Intente más tarde.' + err)\n            this.btnCargando = false\n          })\n        } else {\n          let bajosArea = {}\n          bajosArea.estudiante = 'Total Desempeño Bajo'\n          this.encabColumnasAreasRecup = []\n          this.encabColumnasAreasRecup.push({label: 'Estudiante', field: 'estudiante', sortable: false})\n          this.encabColumnasAreasRecup.push({label: '#', field: 'orden', sortable: false})\n          this.listaAreasAsignaturasCurso.forEach(elementAr => {\n            this.encabColumnasAreasRecup.push({label: elementAr.nemoArea, field: elementAr.nemoArea, sortable: false, tdClass: 'text-center'})\n            if ((elementAr.asignaturas).length > 1) {\n              elementAr.asignaturas.forEach(elementAs => {\n                this.encabColumnasAreasRecup.push({label: elementAs.nemo, field: elementAs.nemo, sortable: false, tdClass: 'text-center'})\n                bajosArea[elementAs.nemo] = 0\n              })\n              bajosArea[elementAr.nemoArea] = 0\n            } else {\n              bajosArea[elementAr.nemoArea] = 0\n            }\n          })\n          this.encabColumnasAreasRecup.push({label: '#', field: 'orden', sortable: false})\n          this.encabColumnasAreasRecup.push({label: 'BJ', field: 'bajE', sortable: false, tdClass: 'text-center'})\n          this.encabColumnasAreasRecup.push({label: 'BS', field: 'basE', sortable: false, tdClass: 'text-center'})\n          this.encabColumnasAreasRecup.push({label: 'AL', field: 'altE', sortable: false, tdClass: 'text-center'})\n          this.encabColumnasAreasRecup.push({label: 'SU', field: 'supE', sortable: false, tdClass: 'text-center'})\n          this.encabColumnasAreasRecup.push({label: 'PRO', field: 'promedioAsignatura', sortable: false, tdClass: 'text-center'})\n          this.encabColumnasAreasRecup.push({label: 'PTO', field: 'puesto', sortable: false, tdClass: 'text-center'})\n          this.encabColumnasAreasRecup.push({label: 'AJ', field: 'ausJ', sortable: false, tdClass: 'text-center'})\n          this.encabColumnasAreasRecup.push({label: 'AS', field: 'ausS', sortable: false, tdClass: 'text-center'})\n\n          this.listaMatriculados = []\n          let totalBajos = 0\n          let listaPuestos = []\n          let numOrden = 1\n          await axios\n          .get(CONFIG.ROOT_PATH + 'academico/estudiantes/curso/consolidadoasignaturas', {params: {idCurso: this.idCurso, periodo: this.idPeriodo}})\n          .then(response => {\n            if (response.data.error){\n              this.mensajeEmergente('danger',CONFIG.TITULO_MSG,response.data.mensaje + ' - consolidado asignaturas curso')\n              this.btnCargando = false\n            } else{\n              if (response.data.datos != 0) {\n                //console.log(JSON.stringify(response.data.datos))\n                response.data.datos.forEach(element => {         \n                  let contAsignaturas = 0\n                  let sumaAsignaturas = 0\n                  let bajE = 0\n                  let basE = 0\n                  let altE = 0\n                  let supE = 0\n                  let ausJ = 0\n                  let ausS = 0\n                  let datosEstudiante = {}\n                  datosEstudiante.estudiante = element.estudiante\n                  datosEstudiante.orden = numOrden\n                  datosEstudiante.id = element.id\n                  this.listaAreasAsignaturasCurso.forEach(elementAr => {\n                    if ((elementAr.asignaturas).length > 1) {\n                      let sumaPromArea = 0\n                      elementAr.asignaturas.forEach(elementAs => {\n                        let indice = element.notas.findIndex(nota => nota.id_asignatura_curso === elementAs.idAsignaturaCurso)\n                        if (indice >= 0) {\n                          if (isNaN(element.notas[indice].definitiva) || element.notas[indice].definitiva === null || element.notas[indice].definitiva <= 0 || element.notas[indice].definitiva > this.$store.state.datosSecciones[0].maxSup) {\n                            datosEstudiante[elementAs.nemo] = ''\n                          } else {\n                            if (element.notas[indice].recuperacion > element.notas[indice].definitiva) {\n                              element.notas[indice].definitiva = element.notas[indice].recuperacion\n                              datosEstudiante[elementAs.nemo] = '[' + Number(element.notas[indice].recuperacion).toFixed(1) + ']'\n                            } else {\n                              datosEstudiante[elementAs.nemo] = Number(element.notas[indice].definitiva).toFixed(1)\n                            }\n                            sumaPromArea += (element.notas[indice].definitiva * elementAs.porcentaje) / 100\n                            if (element.notas[indice].definitiva > 0 && element.notas[indice].definitiva < this.$store.state.datosSecciones[0].minBas) {\n                              bajE++\n                              bajosArea[elementAs.nemo]++\n                              totalBajos++\n                            } else if (element.notas[indice].definitiva >= this.$store.state.datosSecciones[0].minBas && element.notas[indice].definitiva < this.$store.state.datosSecciones[0].minAlt) {\n                              basE++\n                            } else if (element.notas[indice].definitiva >= this.$store.state.datosSecciones[0].minAlt && element.notas[indice].definitiva < this.$store.state.datosSecciones[0].minSup) {\n                              altE++\n                            } else if (element.notas[indice].definitiva >= this.$store.state.datosSecciones[0].minSup && element.notas[indice].definitiva <= this.$store.state.datosSecciones[0].maxSup) {\n                              supE++\n                            }\n                            sumaAsignaturas += element.notas[indice].definitiva\n                            ausJ += Number(element.notas[indice].ausJ)\n                            ausS += Number(element.notas[indice].ausS)\n                            contAsignaturas++\n                          }\n                        }\n                      })\n                      datosEstudiante[elementAr.nemoArea] = this.redondear(sumaPromArea).toFixed(1)\n                      if (datosEstudiante[elementAr.nemoArea] > 0 && datosEstudiante[elementAr.nemoArea] < this.$store.state.datosSecciones[0].minBas) {\n                        bajosArea[elementAr.nemoArea]++\n                      }\n                    } else {\n                      let indice = element.notas.findIndex(nota => nota.id_area === elementAr.idArea)\n                      if (indice >= 0) {\n                        if (element.notas[indice].orden == 99) {\n                          if ( this.$store.state.datosSecciones[0].tipoValComp == 0) {\n                            datosEstudiante[elementAr.nemoArea] = element.notas[indice].definitivacompor\n                          } else {\n                            if (isNaN(element.notas[indice].definitiva) || element.notas[indice].definitiva === null || element.notas[indice].definitiva <= 0 || element.notas[indice].definitiva > this.$store.state.datosSecciones[0].maxSup) {\n                              datosEstudiante[elementAr.nemoArea] = ''\n                            } else {\n                              datosEstudiante[elementAr.nemoArea] = Number(element.notas[indice].definitiva).toFixed(1)\n                            }\n                          }\n                        } else {\n                          if (isNaN(element.notas[indice].definitiva) || element.notas[indice].definitiva === null || element.notas[indice].definitiva < 0 || element.notas[indice].definitiva > this.$store.state.datosSecciones[0].maxSup) {\n                            datosEstudiante[elementAr.nemoArea] = ''\n                          } else {\n                            if (element.notas[indice].recuperacion > element.notas[indice].definitiva) {\n                              element.notas[indice].definitiva = element.notas[indice].recuperacion\n                              datosEstudiante[elementAr.nemoArea] = '[' + Number(element.notas[indice].recuperacion).toFixed(1) + ']'\n                            } else {\n                              datosEstudiante[elementAr.nemoArea] = Number(element.notas[indice].definitiva).toFixed(1)\n                            }\n                            if (element.notas[indice].definitiva > 0 && element.notas[indice].definitiva < this.$store.state.datosSecciones[0].minBas) {\n                              bajE++\n                              bajosArea[elementAr.nemoArea]++\n                              totalBajos++\n                            } else if (element.notas[indice].definitiva >= this.$store.state.datosSecciones[0].minBas && element.notas[indice].definitiva < this.$store.state.datosSecciones[0].minAlt) {\n                              basE++\n                            } else if (element.notas[indice].definitiva >= this.$store.state.datosSecciones[0].minAlt && element.notas[indice].definitiva < this.$store.state.datosSecciones[0].minSup) {\n                              altE++\n                            } else if (element.notas[indice].definitiva >= this.$store.state.datosSecciones[0].minSup && element.notas[indice].definitiva <= this.$store.state.datosSecciones[0].maxSup) {\n                              supE++\n                            }\n                            sumaAsignaturas += element.notas[indice].definitiva\n                            ausJ += Number(element.notas[indice].ausJ)\n                            ausS += Number(element.notas[indice].ausS)\n                            contAsignaturas++\n                          }\n                        }\n                      }\n                    }\n                  })\n                  if (contAsignaturas > 0) {\n                    datosEstudiante.promedioAsignatura = Number(sumaAsignaturas / contAsignaturas).toFixed(1)\n                    listaPuestos.push({'id': element.id, 'promedio': sumaAsignaturas / contAsignaturas})\n                    datosEstudiante.bajE = bajE\n                    datosEstudiante.basE = basE\n                    datosEstudiante.altE = altE\n                    datosEstudiante.supE = supE\n                    datosEstudiante.ausJ = ausJ\n                    datosEstudiante.ausS = ausS\n                    datosEstudiante.puesto = ''\n                  } else {\n                    datosEstudiante.promedioAsignatura = Number(0).toFixed(1)\n                    listaPuestos.push({'id': element.id, 'promedio': 0})\n                  }\n                  this.listaMatriculados.push(JSON.parse(JSON.stringify(datosEstudiante)))\n                  //console.log(JSON.stringify(datosEstudiante))\n                  numOrden++\n                })\n                listaPuestos.sort(((a, b) => b.promedio - a.promedio));\n                //console.log(JSON.stringify(listaPuestos))\n                let numPuesto = 1\n                listaPuestos.forEach(element2 => {\n                  this.listaMatriculados.forEach(element => {\n                    if (element.id == element2.id) {\n                      element.puesto = numPuesto\n                      numPuesto++\n                    }\n                  })\n                })\n                bajosArea.bajE = totalBajos\n                this.listaMatriculados.push(JSON.parse(JSON.stringify(bajosArea)))\n                console.log(JSON.stringify(bajosArea))\n                setTimeout(()=>{\n                  this.btnCargando = false\n                },100)\n              } else {\n                this.btnCargando = false\n              }\n            }\n            //console.log(JSON.stringify(this.listaMatriculados))\n          })\n          .catch(err => {\n            this.mensajeEmergente('danger',CONFIG.TITULO_MSG,'Algo salio mal y no se pudo realizar: consolidado areas curso. Intente más tarde.' + err)\n            this.btnCargando = false\n          })\n        }\n      },\n      async consultarConsolidadoAsignaturas() {\n        this.nombreSede = document.getElementById('sedes')[document.getElementById('sedes').selectedIndex].text\n        if (this.idCurso != null) { \n          this.nombreCurso = document.getElementById('cursos')[document.getElementById('cursos').selectedIndex].text\n          this.listaAsignaturasCurso = []\n          this.$store.state.datosCursos.forEach(element => {\n            if (element.id == this.idCurso) {\n              this.idNivel = element.id_nivel\n            }\n          })\n          await axios\n          .get(CONFIG.ROOT_PATH + 'academico/asignacioncurso', {params: {idCurso: this.idCurso, idInstitucion: this.$store.state.idInstitucion}})\n          .then(response => {\n            if (response.data.error){\n              this.mensajeEmergente('danger',CONFIG.TITULO_MSG,response.data.mensaje + ' - Lista asignaturas curso')\n              this.btnCargando = false\n            } else{\n              if (response.data.datos != 0) {\n                this.listaAsignaturasCurso = response.data.datos\n              }\n            }\n            //console.log(JSON.stringify(this.listaAsignaturasCurso))\n          })\n          .catch(err => {\n            this.mensajeEmergente('danger',CONFIG.TITULO_MSG,'Algo salio mal y no se pudo realizar: Lista asignación docentes curso. Intente más tarde.' + err)\n            this.btnCargando = false\n          })\n          if (this.idNivel == 1) {\n            this.encabColumnas = []\n            this.encabColumnas.push({label: 'Estudiante', field: 'estudiante', sortable: false})\n            this.listaAsignaturasCurso.forEach(element => {\n              this.encabColumnas.push({label: element.nemo, field: element.nemo, sortable: false, tdClass: 'text-center'})\n            })\n            this.listaMatriculados = []\n            await axios\n            .get(CONFIG.ROOT_PATH + 'academico/estudiantes/curso/consolidadoasignaturas', {params: {idCurso: this.idCurso, periodo: this.idPeriodo}})\n            .then(response => {\n              if (response.data.error){\n                this.mensajeEmergente('danger',CONFIG.TITULO_MSG,response.data.mensaje + ' - consolidado asignaturas curso')\n                this.btnCargando = false\n              } else{\n                if (response.data.datos != 0) {\n                  //console.log(JSON.stringify(response.data.datos))\n                  let datosEstudiante = {}\n                  response.data.datos.forEach(element => {         \n                    datosEstudiante.estudiante = element.estudiante\n                    element.notas.forEach(element2 => {\n                      if (element2.orden == 99) {\n                        if ( this.$store.state.datosSecciones[0].tipoValComp == 0) {\n                          datosEstudiante[element2.nemo] = element2.definitivacompor\n                        } else {\n                          datosEstudiante[element2.nemo] = Number(element2.definitiva).toFixed(1) == 0 ? '' : Number(element2.definitiva).toFixed(1)\n                        }\n                      } else {\n                        datosEstudiante[element2.nemo] = element2.definitivapree\n                      }\n                    })\n                    this.listaMatriculados.push(JSON.parse(JSON.stringify(datosEstudiante)))\n                    //console.log(JSON.stringify(datosEstudiante))\n                  })\n                }\n                setTimeout(()=>{\n                  this.btnCargando = false\n                },100)\n              }\n              //console.log(JSON.stringify(this.listaMatriculados))\n            })\n            .catch(err => {\n              this.mensajeEmergente('danger',CONFIG.TITULO_MSG,'Algo salio mal y no se pudo realizar: consolidado asignaturas curso. Intente más tarde.' + err)\n              this.btnCargando = false\n            })\n          } else {\n            let bajosAsignatura = {}\n            bajosAsignatura.estudiante = 'Total Desempeño Bajo'\n            this.encabColumnas = []\n            this.encabColumnas.push({label: 'Estudiante', field: 'estudiante', sortable: false})\n            this.encabColumnas.push({label: '#', field: 'orden', sortable: false})\n            this.listaAsignaturasCurso.forEach(element => {\n              this.encabColumnas.push({label: element.nemo, field: element.nemo, sortable: false, tdClass: 'text-center'})\n              bajosAsignatura[element.nemo] = 0\n            })\n            this.encabColumnas.push({label: '#', field: 'orden', sortable: false})\n            this.encabColumnas.push({label: 'BAJ', field: 'bajE', sortable: false, tdClass: 'text-center'})\n            this.encabColumnas.push({label: 'BAS', field: 'basE', sortable: false, tdClass: 'text-center'})\n            this.encabColumnas.push({label: 'ALT', field: 'altE', sortable: false, tdClass: 'text-center'})\n            this.encabColumnas.push({label: 'SUP', field: 'supE', sortable: false, tdClass: 'text-center'})\n            this.encabColumnas.push({label: 'PRO', field: 'promedioAsignatura', sortable: false, tdClass: 'text-center'})\n            this.encabColumnas.push({label: 'PTO', field: 'puesto', sortable: false, tdClass: 'text-center'})\n            this.encabColumnas.push({label: 'AJ', field: 'ausJ', sortable: false, tdClass: 'text-center'})\n            this.encabColumnas.push({label: 'AS', field: 'ausS', sortable: false, tdClass: 'text-center'})\n            this.listaMatriculados = []\n            let totalBajos = 0\n            let listaPuestos = []\n            let numOrden = 1\n            await axios\n            .get(CONFIG.ROOT_PATH + 'academico/estudiantes/curso/consolidadoasignaturas', {params: {idCurso: this.idCurso, periodo: this.idPeriodo}})\n            .then(response => {\n              if (response.data.error){\n                this.mensajeEmergente('danger',CONFIG.TITULO_MSG,response.data.mensaje + ' - consolidado asignaturas curso')\n                this.btnCargando = false\n              } else{\n                if (response.data.datos != 0) {\n                  //console.log(JSON.stringify(response.data.datos))\n                  response.data.datos.forEach(element => {         \n                    let contAsignaturas = 0\n                    let sumaAsignaturas = 0\n                    let bajE = 0\n                    let basE = 0\n                    let altE = 0\n                    let supE = 0\n                    let ausJ = 0\n                    let ausS = 0\n                    let datosEstudiante = {}\n                    datosEstudiante.estudiante = element.estudiante\n                    datosEstudiante.orden = numOrden\n                    datosEstudiante.id = element.id\n                    element.notas.forEach(element2 => {\n                      if (element2.orden == 99) {\n                        if ( this.$store.state.datosSecciones[0].tipoValComp == 0) {\n                          datosEstudiante[element2.nemo] = element2.definitivacompor\n                        } else {\n                          if (isNaN(element2.definitiva) || element2.definitiva === null) {\n                            datosEstudiante[element2.nemo] = ''\n                          } else {\n                            datosEstudiante[element2.nemo] = Number(element2.definitiva).toFixed(1)\n                          }\n                        }\n                      } else {\n                        //if (element2.definitiva === 0 || element2.definitiva === null || element2.definitiva === '' || Number(element2.definitiva).toFixed(1) == 0) {\n                        if (isNaN(element2.definitiva) || element2.definitiva === null || element2.definitiva < this.$store.state.datosSecciones[0].minBaj) {\n                          datosEstudiante[element2.nemo] = null\n                        } else {\n                          datosEstudiante[element2.nemo] = Number(element2.definitiva).toFixed(1)\n                          if (element2.definitiva >= this.$store.state.datosSecciones[0].minBaj && element2.definitiva < this.$store.state.datosSecciones[0].minBas) {\n                            bajE++\n                            bajosAsignatura[element2.nemo]++\n                            totalBajos++\n                          } else if (element2.definitiva >= this.$store.state.datosSecciones[0].minBas && element2.definitiva < this.$store.state.datosSecciones[0].minAlt) {\n                            basE++\n                          } else if (element2.definitiva >= this.$store.state.datosSecciones[0].minAlt && element2.definitiva < this.$store.state.datosSecciones[0].minSup) {\n                            altE++\n                          } else if (element2.definitiva >= this.$store.state.datosSecciones[0].minSup && element2.definitiva <= this.$store.state.datosSecciones[0].maxSup) {\n                            supE++\n                          }\n                          sumaAsignaturas += element2.definitiva\n                          ausJ += Number(element2.ausJ)\n                          ausS += Number(element2.ausS)\n                          contAsignaturas++\n                        }\n                      }\n                    })\n                    if (contAsignaturas > 0) {\n                      datosEstudiante.promedioAsignatura = Number(sumaAsignaturas / contAsignaturas).toFixed(1)\n                      listaPuestos.push({'id': element.id, 'promedio': sumaAsignaturas / contAsignaturas})\n                      //sumaPromedios += Number(sumaAsignaturas / contAsignaturas).toFixed(1)\n                      datosEstudiante.bajE = bajE\n                      datosEstudiante.basE = basE\n                      datosEstudiante.altE = altE\n                      datosEstudiante.supE = supE\n                      datosEstudiante.ausJ = ausJ\n                      datosEstudiante.ausS = ausS\n                      datosEstudiante.puesto = ''\n                    } else {\n                      datosEstudiante.promedioAsignatura = Number(0).toFixed(1)\n                      listaPuestos.push({'id': element.id, 'promedio': 0})\n                    }\n                    this.listaMatriculados.push(JSON.parse(JSON.stringify(datosEstudiante)))\n                    //console.log(JSON.stringify(datosEstudiante))\n                    numOrden++\n                  })\n                  listaPuestos.sort(((a, b) => b.promedio - a.promedio));\n                  let numPuesto = 1\n                  listaPuestos.forEach(element2 => {\n                    this.listaMatriculados.forEach(element => {\n                      if (element.id == element2.id) {\n                        element.puesto = numPuesto\n                        numPuesto++\n                      }\n                    })\n                  })\n                  bajosAsignatura.bajE = totalBajos\n                  this.listaMatriculados.push(JSON.parse(JSON.stringify(bajosAsignatura)))\n                  setTimeout(()=>{\n                    this.btnCargando = false\n                  },100)\n                } else {\n                  this.btnCargando = false\n                }\n              }\n              //console.log(JSON.stringify(this.listaMatriculados))\n            })\n            .catch(err => {\n              this.mensajeEmergente('danger',CONFIG.TITULO_MSG,'Algo salio mal y no se pudo realizar: consolidado asignaturas curso. Intente más tarde.' + err)\n              this.btnCargando = false\n            })\n          }\n        }\n      },\n      async consultarConsolidadoAsignaturasRecuperaciones() {\n        this.nombreSede = document.getElementById('sedes')[document.getElementById('sedes').selectedIndex].text\n        if (this.idCurso != null) { \n          this.nombreCurso = document.getElementById('cursos')[document.getElementById('cursos').selectedIndex].text\n          this.listaAsignaturasCurso = []\n          this.$store.state.datosCursos.forEach(element => {\n            if (element.id == this.idCurso) {\n              this.idNivel = element.id_nivel\n            }\n          })\n          await axios\n          .get(CONFIG.ROOT_PATH + 'academico/asignacioncurso', {params: {idCurso: this.idCurso, idInstitucion: this.$store.state.idInstitucion}})\n          .then(response => {\n            if (response.data.error){\n              this.mensajeEmergente('danger',CONFIG.TITULO_MSG,response.data.mensaje + ' - Lista asignaturas curso')\n              this.btnCargando = false\n            } else{\n              if (response.data.datos != 0) {\n                this.listaAsignaturasCurso = response.data.datos\n              }\n            }\n            //console.log(JSON.stringify(this.listaAsignaturasCurso))\n          })\n          .catch(err => {\n            this.mensajeEmergente('danger',CONFIG.TITULO_MSG,'Algo salio mal y no se pudo realizar: Lista asignación docentes curso. Intente más tarde.' + err)\n            this.btnCargando = false\n          })\n          if (this.idNivel == 1) {\n            this.encabColumnasRecup = []\n            this.encabColumnasRecup.push({label: 'Estudiante', field: 'estudiante', sortable: false})\n            this.listaAsignaturasCurso.forEach(element => {\n              this.encabColumnasRecup.push({label: element.nemo, field: element.nemo, sortable: false, tdClass: 'text-center'})\n            })\n            this.listaMatriculados = []\n            await axios\n            .get(CONFIG.ROOT_PATH + 'academico/estudiantes/curso/consolidadoasignaturas', {params: {idCurso: this.idCurso, periodo: this.idPeriodo}})\n            .then(response => {\n              if (response.data.error){\n                this.mensajeEmergente('danger',CONFIG.TITULO_MSG,response.data.mensaje + ' - consolidado asignaturas curso')\n                this.btnCargando = false\n              } else{\n                if (response.data.datos != 0) {\n                  //console.log(JSON.stringify(response.data.datos))\n                  let datosEstudiante = {}\n                  response.data.datos.forEach(element => {         \n                    datosEstudiante.estudiante = element.estudiante\n                    element.notas.forEach(element2 => {\n                      if (element2.orden == 99) {\n                        if ( this.$store.state.datosSecciones[0].tipoValComp == 0) {\n                          datosEstudiante[element2.nemo] = element2.definitivacompor\n                        } else {\n                          datosEstudiante[element2.nemo] = Number(element2.definitiva).toFixed(1) == 0 ? '' : Number(element2.definitiva).toFixed(1)\n                        }\n                      } else {\n                        datosEstudiante[element2.nemo] = element2.definitivapree\n                      }\n                    })\n                    this.listaMatriculados.push(JSON.parse(JSON.stringify(datosEstudiante)))\n                    //console.log(JSON.stringify(datosEstudiante))\n                  })\n                }\n                setTimeout(()=>{\n                  this.btnCargando = false\n                },100)\n              }\n              //console.log(JSON.stringify(this.listaMatriculados))\n            })\n            .catch(err => {\n              this.mensajeEmergente('danger',CONFIG.TITULO_MSG,'Algo salio mal y no se pudo realizar: consolidado asignaturas curso. Intente más tarde.' + err)\n              this.btnCargando = false\n            })\n          } else {\n            let bajosAsignatura = {}\n            bajosAsignatura.estudiante = 'Total Desempeño Bajo'\n            this.encabColumnasRecup = []\n            this.encabColumnasRecup.push({label: 'Estudiante', field: 'estudiante', sortable: false})\n            this.encabColumnasRecup.push({label: '#', field: 'orden', sortable: false})\n            this.listaAsignaturasCurso.forEach(element => {\n              this.encabColumnasRecup.push({label: element.nemo, field: element.nemo, sortable: false, tdClass: 'text-center'})\n              bajosAsignatura[element.nemo] = 0\n            })\n            this.encabColumnasRecup.push({label: '#', field: 'orden', sortable: false})\n            this.encabColumnasRecup.push({label: 'BAJ', field: 'bajE', sortable: false, tdClass: 'text-center'})\n            this.encabColumnasRecup.push({label: 'BAS', field: 'basE', sortable: false, tdClass: 'text-center'})\n            this.encabColumnasRecup.push({label: 'ALT', field: 'altE', sortable: false, tdClass: 'text-center'})\n            this.encabColumnasRecup.push({label: 'SUP', field: 'supE', sortable: false, tdClass: 'text-center'})\n            this.encabColumnasRecup.push({label: 'PRO', field: 'promedioAsignatura', sortable: false, tdClass: 'text-center'})\n            this.encabColumnasRecup.push({label: 'PTO', field: 'puesto', sortable: false, tdClass: 'text-center'})\n            this.encabColumnasRecup.push({label: 'AJ', field: 'ausJ', sortable: false, tdClass: 'text-center'})\n            this.encabColumnasRecup.push({label: 'AS', field: 'ausS', sortable: false, tdClass: 'text-center'})\n            this.listaMatriculados = []\n            let totalBajos = 0\n            let listaPuestos = []\n            let numOrden = 1\n            await axios\n            .get(CONFIG.ROOT_PATH + 'academico/estudiantes/curso/consolidadoasignaturas', {params: {idCurso: this.idCurso, periodo: this.idPeriodo}})\n            .then(response => {\n              if (response.data.error){\n                this.mensajeEmergente('danger',CONFIG.TITULO_MSG,response.data.mensaje + ' - consolidado asignaturas curso')\n                this.btnCargando = false\n              } else{\n                if (response.data.datos != 0) {\n                  //console.log(JSON.stringify(response.data.datos))\n                  response.data.datos.forEach(element => {         \n                    let contAsignaturas = 0\n                    let sumaAsignaturas = 0\n                    let bajE = 0\n                    let basE = 0\n                    let altE = 0\n                    let supE = 0\n                    let ausJ = 0\n                    let ausS = 0\n                    let datosEstudiante = {}\n                    datosEstudiante.estudiante = element.estudiante\n                    datosEstudiante.orden = numOrden\n                    datosEstudiante.id = element.id\n                    element.notas.forEach(element2 => {\n                      if (element2.orden == 99) {\n                        if ( this.$store.state.datosSecciones[0].tipoValComp == 0) {\n                          datosEstudiante[element2.nemo] = element2.definitivacompor\n                        } else {\n                          if (isNaN(element2.definitiva) || element2.definitiva === null) {\n                            datosEstudiante[element2.nemo] = ''\n                          } else {\n                            datosEstudiante[element2.nemo] = Number(element2.definitiva).toFixed(1)\n                          }\n                        }\n                      } else {\n                        //if (element2.definitiva === 0 || element2.definitiva === null || element2.definitiva === '' || Number(element2.definitiva).toFixed(1) == 0) {\n                        if (isNaN(element2.definitiva) || element2.definitiva === null || element2.definitiva < this.$store.state.datosSecciones[0].minBaj) {\n                          datosEstudiante[element2.nemo] = null\n                        } else {\n                          if (element2.recuperacion > element2.definitiva) {\n                            element2.definitiva = element2.recuperacion\n                            datosEstudiante[element2.nemo] = '[' + Number(element2.recuperacion).toFixed(1) + ']'\n                          } else {\n                            datosEstudiante[element2.nemo] = Number(element2.definitiva).toFixed(1)\n                          }\n                          if (element2.definitiva >= this.$store.state.datosSecciones[0].minBaj && element2.definitiva < this.$store.state.datosSecciones[0].minBas) {\n                            bajE++\n                            bajosAsignatura[element2.nemo]++\n                            totalBajos++\n                          } else if (element2.definitiva >= this.$store.state.datosSecciones[0].minBas && element2.definitiva < this.$store.state.datosSecciones[0].minAlt) {\n                            basE++\n                          } else if (element2.definitiva >= this.$store.state.datosSecciones[0].minAlt && element2.definitiva < this.$store.state.datosSecciones[0].minSup) {\n                            altE++\n                          } else if (element2.definitiva >= this.$store.state.datosSecciones[0].minSup && element2.definitiva <= this.$store.state.datosSecciones[0].maxSup) {\n                            supE++\n                          }\n                          sumaAsignaturas += element2.definitiva\n                          ausJ += Number(element2.ausJ)\n                          ausS += Number(element2.ausS)\n                          contAsignaturas++\n                        }\n                      }\n                    })\n                    if (contAsignaturas > 0) {\n                      datosEstudiante.promedioAsignatura = Number(sumaAsignaturas / contAsignaturas).toFixed(1)\n                      listaPuestos.push({'id': element.id, 'promedio': sumaAsignaturas / contAsignaturas})\n                      //sumaPromedios += Number(sumaAsignaturas / contAsignaturas).toFixed(1)\n                      datosEstudiante.bajE = bajE\n                      datosEstudiante.basE = basE\n                      datosEstudiante.altE = altE\n                      datosEstudiante.supE = supE\n                      datosEstudiante.ausJ = ausJ\n                      datosEstudiante.ausS = ausS\n                      datosEstudiante.puesto = ''\n                    } else {\n                      datosEstudiante.promedioAsignatura = Number(0).toFixed(1)\n                      listaPuestos.push({'id': element.id, 'promedio': 0})\n                    }\n                    this.listaMatriculados.push(JSON.parse(JSON.stringify(datosEstudiante)))\n                    //console.log(JSON.stringify(datosEstudiante))\n                    numOrden++\n                  })\n                  listaPuestos.sort(((a, b) => b.promedio - a.promedio));\n                  let numPuesto = 1\n                  listaPuestos.forEach(element2 => {\n                    this.listaMatriculados.forEach(element => {\n                      if (element.id == element2.id) {\n                        element.puesto = numPuesto\n                        numPuesto++\n                      }\n                    })\n                  })\n                  bajosAsignatura.bajE = totalBajos\n                  this.listaMatriculados.push(JSON.parse(JSON.stringify(bajosAsignatura)))\n                  setTimeout(()=>{\n                    this.btnCargando = false\n                  },100)\n                } else {\n                  this.btnCargando = false\n                }\n              }\n              //console.log(JSON.stringify(this.listaMatriculados))\n            })\n            .catch(err => {\n              this.mensajeEmergente('danger',CONFIG.TITULO_MSG,'Algo salio mal y no se pudo realizar: consolidado asignaturas curso. Intente más tarde.' + err)\n              this.btnCargando = false\n            })\n          }\n        }\n      },\n      async ocuparComboSedes() {\n        this.comboSedes = []\n        this.$store.state.datosSedes.forEach(element => {\n          this.comboSedes.push({ 'value': element.id, 'text': element.sede.toUpperCase() })\n        })\n      },\n      async ocuparComboCursosSede() {\n        this.comboCursosSede = []\n        this.$store.state.datosCursos.forEach(element => {\n          if (element.id_sede == this.idSede) {\n            this.comboCursosSede.push({ 'value': element.id, 'text': element.nomenclatura.toUpperCase() })\n          }\n        })\n        //console.log(JSON.stringify(this.$store.state.datosCursos))\n      },\n      async ocuparComboPeriodos() {\n        this.comboPeriodos = []\n        this.$store.state.datosTablas.periodos.forEach(element => {\n          this.comboPeriodos.push({ 'value': element.id, 'text': element.periodo.toUpperCase() })\n        })\n      },\n      redondear(num) {\n        var m = Number((Math.abs(num) * 10).toPrecision(15))\n        return Math.round(m) / 10 * Math.sign(num);\n      },\n      cancelarFormulario() {\n        this.$router.push('/')\n      },\n      mensajeEmergente(variante, titulo, contenido) {\n        this.$bvToast.toast(contenido, { title: titulo, variant: variante, toaster: \"b-toaster-top-center\", solid: true, autoHideDelay: 4000, appendToast: false })\n      }\n    },\n    computed: {\n    },\n    beforeMount() {\n      this.ocuparComboPeriodos()\n      this.ocuparComboSedes()\n    }\n  }\n</script>\n\n<style>\n  .condensed thead th{\n    padding-left:.1em;\n    padding-right:.1em;\n    font-size: 12px;\n    text-align: center;\n    /*writing-mode: vertical-lr;\n    text-orientation: upright;*/\n  }\n  .condensed tbody{\n    padding-left:.1em;\n    padding-right:.1em;\n    font-size: 12px;\n    text-align: center;\n    height: 10px;\n  }\n  .condensed input{\n    padding-left:.1em;\n    padding-right:.1em;\n    padding-top:.1em;\n    padding-bottom:.1em;\n    height: 18px;\n    font-size: 12px;\n    text-align: center;\n  }\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ConsolidadosCurso.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ConsolidadosCurso.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ConsolidadosCurso.vue?vue&type=template&id=fe90d1e2&\"\nimport script from \"./ConsolidadosCurso.vue?vue&type=script&lang=js&\"\nexport * from \"./ConsolidadosCurso.vue?vue&type=script&lang=js&\"\nimport style0 from \"./ConsolidadosCurso.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ConsolidadosCurso.vue?vue&type=style&index=0&lang=css&\""],"sourceRoot":""}